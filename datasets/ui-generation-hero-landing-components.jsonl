{"system": "You are an expert UI developer specializing in creating stunning hero sections and landing page components in the style of 21st.dev. Focus on modern design trends, animations, gradients, 3D effects, and conversion-optimized layouts. Always use TypeScript, Framer Motion, and responsive design.", "messages": [{"role": "user", "content": "Create a modern hero section with animated gradient background, floating elements, smooth scroll animations, CTA buttons, and responsive typography. Include parallax effects and glassmorphism."}, {"role": "assistant", "content": "I'll create a stunning hero section with all the modern effects you requested, including animated gradients, floating elements, and glassmorphism.\n\n```tsx\n// hero-section.tsx\nimport React, { useEffect, useRef } from 'react'\nimport { motion, useScroll, useTransform, useSpring, useInView } from 'framer-motion'\nimport { ArrowRight, Sparkles, Zap, Globe, ChevronDown } from 'lucide-react'\n\ninterface FloatingElementProps {\n  delay?: number\n  duration?: number\n  children: React.ReactNode\n}\n\nconst FloatingElement: React.FC<FloatingElementProps> = ({ delay = 0, duration = 20, children }) => {\n  return (\n    <motion.div\n      initial={{ y: 0 }}\n      animate={{\n        y: [-20, 20, -20],\n        rotate: [-5, 5, -5],\n      }}\n      transition={{\n        duration,\n        repeat: Infinity,\n        delay,\n        ease: \"easeInOut\"\n      }}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\ninterface AnimatedGradientProps {\n  className?: string\n}\n\nconst AnimatedGradient: React.FC<AnimatedGradientProps> = ({ className = '' }) => {\n  return (\n    <div className={`absolute inset-0 overflow-hidden ${className}`}>\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-600 via-pink-500 to-orange-400 opacity-60\" />\n      <motion.div\n        className=\"absolute inset-0\"\n        animate={{\n          background: [\n            'radial-gradient(circle at 20% 80%, rgba(255, 119, 0, 0.3) 0%, transparent 50%)',\n            'radial-gradient(circle at 80% 20%, rgba(255, 119, 0, 0.3) 0%, transparent 50%)',\n            'radial-gradient(circle at 40% 40%, rgba(255, 119, 0, 0.3) 0%, transparent 50%)',\n            'radial-gradient(circle at 20% 80%, rgba(255, 119, 0, 0.3) 0%, transparent 50%)',\n          ]\n        }}\n        transition={{\n          duration: 10,\n          repeat: Infinity,\n          ease: \"linear\"\n        }}\n      />\n      <motion.div\n        className=\"absolute inset-0\"\n        animate={{\n          background: [\n            'radial-gradient(circle at 80% 50%, rgba(217, 70, 239, 0.3) 0%, transparent 50%)',\n            'radial-gradient(circle at 20% 50%, rgba(217, 70, 239, 0.3) 0%, transparent 50%)',\n            'radial-gradient(circle at 50% 80%, rgba(217, 70, 239, 0.3) 0%, transparent 50%)',\n            'radial-gradient(circle at 80% 50%, rgba(217, 70, 239, 0.3) 0%, transparent 50%)',\n          ]\n        }}\n        transition={{\n          duration: 15,\n          repeat: Infinity,\n          ease: \"linear\"\n        }}\n      />\n    </div>\n  )\n}\n\nexport const HeroSection: React.FC = () => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const { scrollY } = useScroll()\n  const isInView = useInView(containerRef, { once: false, amount: 0.3 })\n  \n  // Parallax transforms\n  const y1 = useTransform(scrollY, [0, 500], [0, 150])\n  const y2 = useTransform(scrollY, [0, 500], [0, -150])\n  const opacity = useTransform(scrollY, [0, 300], [1, 0])\n  const scale = useTransform(scrollY, [0, 300], [1, 0.8])\n  \n  // Smooth spring animations\n  const springConfig = { stiffness: 100, damping: 30, restDelta: 0.001 }\n  const y1Spring = useSpring(y1, springConfig)\n  const y2Spring = useSpring(y2, springConfig)\n  \n  return (\n    <section ref={containerRef} className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      {/* Animated Gradient Background */}\n      <AnimatedGradient className=\"-z-10\" />\n      \n      {/* Mesh Gradient Overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-white/10 via-transparent to-transparent -z-10\" />\n      \n      {/* Floating Background Elements */}\n      <div className=\"absolute inset-0 -z-5\">\n        <motion.div\n          style={{ y: y1Spring }}\n          className=\"absolute top-1/4 left-1/4\"\n        >\n          <FloatingElement delay={0} duration={25}>\n            <div className=\"w-72 h-72 bg-gradient-to-br from-purple-400/20 to-pink-400/20 rounded-full blur-3xl\" />\n          </FloatingElement>\n        </motion.div>\n        \n        <motion.div\n          style={{ y: y2Spring }}\n          className=\"absolute bottom-1/4 right-1/4\"\n        >\n          <FloatingElement delay={2} duration={20}>\n            <div className=\"w-96 h-96 bg-gradient-to-br from-blue-400/20 to-cyan-400/20 rounded-full blur-3xl\" />\n          </FloatingElement>\n        </motion.div>\n        \n        <FloatingElement delay={1} duration={30}>\n          <div className=\"absolute top-1/3 right-1/3 w-64 h-64 bg-gradient-to-br from-orange-400/20 to-red-400/20 rounded-full blur-3xl\" />\n        </FloatingElement>\n      </div>\n      \n      {/* Main Content */}\n      <motion.div\n        style={{ opacity, scale }}\n        className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\"\n      >\n        {/* Badge */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"inline-flex items-center justify-center mb-8\"\n        >\n          <div className=\"flex items-center space-x-2 px-4 py-2 bg-white/10 backdrop-blur-md border border-white/20 rounded-full\">\n            <Sparkles className=\"w-4 h-4 text-yellow-300\" />\n            <span className=\"text-sm font-medium text-white\">Introducing Revolutionary UI v3.0</span>\n            <ArrowRight className=\"w-4 h-4 text-white\" />\n          </div>\n        </motion.div>\n        \n        {/* Main Heading */}\n        <motion.h1\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.1 }}\n          className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-bold text-white mb-6\"\n        >\n          <span className=\"block\">Build Stunning</span>\n          <span className=\"block bg-gradient-to-r from-white via-pink-200 to-purple-200 bg-clip-text text-transparent\">\n            User Interfaces\n          </span>\n        </motion.h1>\n        \n        {/* Subtitle */}\n        <motion.p\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.2 }}\n          className=\"text-lg sm:text-xl md:text-2xl text-white/80 max-w-3xl mx-auto mb-10\"\n        >\n          Revolutionary UI Factory System - The future of component generation. \n          Build production-ready interfaces 10x faster with AI-powered automation.\n        </motion.p>\n        \n        {/* CTA Buttons */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.3 }}\n          className=\"flex flex-col sm:flex-row items-center justify-center gap-4 mb-16\"\n        >\n          <button className=\"group relative px-8 py-4 bg-white text-gray-900 font-semibold rounded-lg overflow-hidden transition-all hover:scale-105\">\n            <span className=\"relative z-10 flex items-center\">\n              Get Started Free\n              <ArrowRight className=\"ml-2 w-5 h-5 transition-transform group-hover:translate-x-1\" />\n            </span>\n            <div className=\"absolute inset-0 bg-gradient-to-r from-purple-400 to-pink-400 opacity-0 group-hover:opacity-100 transition-opacity\" />\n          </button>\n          \n          <button className=\"px-8 py-4 bg-white/10 backdrop-blur-md text-white font-semibold rounded-lg border border-white/20 transition-all hover:bg-white/20 hover:scale-105\">\n            View Documentation\n          </button>\n        </motion.div>\n        \n        {/* Feature Icons */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.4 }}\n          className=\"grid grid-cols-3 gap-8 max-w-md mx-auto\"\n        >\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 bg-white/10 backdrop-blur-md rounded-lg flex items-center justify-center mb-2\">\n              <Zap className=\"w-6 h-6 text-yellow-300\" />\n            </div>\n            <span className=\"text-sm text-white/70\">Lightning Fast</span>\n          </div>\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 bg-white/10 backdrop-blur-md rounded-lg flex items-center justify-center mb-2\">\n              <Globe className=\"w-6 h-6 text-blue-300\" />\n            </div>\n            <span className=\"text-sm text-white/70\">Global Scale</span>\n          </div>\n          <div className=\"flex flex-col items-center\">\n            <div className=\"w-12 h-12 bg-white/10 backdrop-blur-md rounded-lg flex items-center justify-center mb-2\">\n              <Sparkles className=\"w-6 h-6 text-purple-300\" />\n            </div>\n            <span className=\"text-sm text-white/70\">AI Powered</span>\n          </div>\n        </motion.div>\n      </motion.div>\n      \n      {/* Scroll Indicator */}\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 1, duration: 1 }}\n        className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2\"\n      >\n        <motion.div\n          animate={{ y: [0, 10, 0] }}\n          transition={{ duration: 2, repeat: Infinity }}\n          className=\"flex flex-col items-center text-white/60\"\n        >\n          <span className=\"text-sm mb-2\">Scroll to explore</span>\n          <ChevronDown className=\"w-5 h-5\" />\n        </motion.div>\n      </motion.div>\n      \n      {/* Decorative Elements */}\n      <div className=\"absolute top-20 left-10 w-20 h-20\">\n        <FloatingElement delay={0.5} duration={15}>\n          <div className=\"w-full h-full bg-gradient-to-br from-purple-400 to-pink-400 rounded-lg opacity-20 blur-xl\" />\n        </FloatingElement>\n      </div>\n      \n      <div className=\"absolute bottom-20 right-10 w-32 h-32\">\n        <FloatingElement delay={1.5} duration={18}>\n          <div className=\"w-full h-full bg-gradient-to-br from-blue-400 to-cyan-400 rounded-full opacity-20 blur-xl\" />\n        </FloatingElement>\n      </div>\n    </section>\n  )\n}\n\n// Example usage\nexport default function LandingPage() {\n  return (\n    <div className=\"bg-gray-900\">\n      <HeroSection />\n      {/* Add more sections here */}\n      <div className=\"h-screen flex items-center justify-center bg-gray-800\">\n        <h2 className=\"text-4xl font-bold text-white\">Next Section</h2>\n      </div>\n    </div>\n  )\n}\n```\n\nThis hero section includes:\n\n1. **Animated Gradient Background**: Multiple animated gradients with smooth transitions\n2. **Floating Elements**: 3D floating shapes with physics-based animations\n3. **Parallax Effects**: Scroll-based transformations for depth\n4. **Glassmorphism**: Frosted glass effect on UI elements\n5. **Smooth Scroll Animations**: Elements animate in as they enter viewport\n6. **Responsive Typography**: Scales beautifully across all devices\n7. **CTA Buttons**: Hover effects with gradient animations\n8. **Feature Icons**: Glassmorphic containers with icons\n9. **Scroll Indicator**: Animated hint for user interaction\n10. **Performance Optimized**: Using Framer Motion's spring animations"}]}
{"system": "You are an expert UI developer specializing in creating stunning landing page sections and components in the style of 21st.dev. Focus on features sections, testimonials, CTAs, footers, and complete landing page templates. Always use TypeScript, modern animations, and conversion-focused design.", "messages": [{"role": "user", "content": "Build a complete landing page with feature grid section using bento box layout, animated testimonials carousel, stats counter with scroll trigger, and a modern footer. Include micro-interactions and 3D transforms."}, {"role": "assistant", "content": "I'll create a complete landing page with all the sections you requested, featuring modern animations and interactions.\n\n```tsx\n// feature-section.tsx\nimport React, { useRef } from 'react'\nimport { motion, useInView } from 'framer-motion'\nimport { Zap, Shield, Palette, Code, Globe, Sparkles, ArrowUpRight, Play } from 'lucide-react'\n\ninterface FeatureCardProps {\n  icon: React.ReactNode\n  title: string\n  description: string\n  className?: string\n  delay?: number\n  large?: boolean\n}\n\nconst FeatureCard: React.FC<FeatureCardProps> = ({\n  icon,\n  title,\n  description,\n  className = '',\n  delay = 0,\n  large = false\n}) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, delay }}\n      whileHover={{ y: -5, transition: { duration: 0.2 } }}\n      className={`group relative bg-gradient-to-br from-gray-900 to-gray-800 rounded-2xl p-8 overflow-hidden ${className}`}\n    >\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-600/10 to-pink-600/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n      \n      <div className=\"relative z-10\">\n        <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center mb-4\">\n          {icon}\n        </div>\n        <h3 className={`font-bold text-white mb-2 ${large ? 'text-2xl' : 'text-xl'}`}>\n          {title}\n        </h3>\n        <p className=\"text-gray-400\">\n          {description}\n        </p>\n        {large && (\n          <motion.div\n            className=\"inline-flex items-center mt-4 text-purple-400 font-medium\"\n            whileHover={{ x: 5 }}\n          >\n            Learn more <ArrowUpRight className=\"ml-1 w-4 h-4\" />\n          </motion.div>\n        )}\n      </div>\n      \n      {/* Animated background decoration */}\n      <motion.div\n        className=\"absolute -bottom-20 -right-20 w-40 h-40 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-full blur-3xl\"\n        animate={{\n          scale: [1, 1.2, 1],\n          opacity: [0.3, 0.5, 0.3],\n        }}\n        transition={{\n          duration: 4,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n    </motion.div>\n  )\n}\n\nexport const FeatureSection: React.FC = () => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isInView = useInView(containerRef, { once: true, amount: 0.2 })\n\n  return (\n    <section ref={containerRef} className=\"py-24 px-4 bg-black\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <span className=\"inline-block px-4 py-2 bg-purple-500/10 text-purple-400 rounded-full text-sm font-medium mb-4\">\n            Features\n          </span>\n          <h2 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\n            Everything you need to build\n            <span className=\"block text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400\">\n              amazing interfaces\n            </span>\n          </h2>\n          <p className=\"text-xl text-gray-400 max-w-3xl mx-auto\">\n            Powerful features designed to accelerate your development workflow\n          </p>\n        </motion.div>\n\n        {/* Bento Box Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <FeatureCard\n            icon={<Zap className=\"w-6 h-6 text-white\" />}\n            title=\"Lightning Fast\"\n            description=\"Optimized performance with lazy loading and code splitting for the best user experience.\"\n            className=\"lg:col-span-2 lg:row-span-1\"\n            delay={0.1}\n            large\n          />\n          <FeatureCard\n            icon={<Shield className=\"w-6 h-6 text-white\" />}\n            title=\"Secure by Default\"\n            description=\"Built-in security features to protect your application.\"\n            delay={0.2}\n          />\n          <FeatureCard\n            icon={<Palette className=\"w-6 h-6 text-white\" />}\n            title=\"Beautiful Design\"\n            description=\"Pre-designed components that look great out of the box.\"\n            delay={0.3}\n          />\n          <FeatureCard\n            icon={<Code className=\"w-6 h-6 text-white\" />}\n            title=\"Developer Friendly\"\n            description=\"Clean APIs and comprehensive documentation.\"\n            delay={0.4}\n          />\n          <FeatureCard\n            icon={<Globe className=\"w-6 h-6 text-white\" />}\n            title=\"Global Ready\"\n            description=\"Internationalization and localization support built-in.\"\n            delay={0.5}\n          />\n          <FeatureCard\n            icon={<Sparkles className=\"w-6 h-6 text-white\" />}\n            title=\"AI Powered\"\n            description=\"Intelligent component generation and optimization using advanced AI models.\"\n            className=\"md:col-span-2 lg:col-span-2\"\n            delay={0.6}\n            large\n          />\n        </div>\n      </div>\n    </section>\n  )\n}\n\n// testimonials-section.tsx\nimport { useState, useEffect } from 'react'\nimport { ChevronLeft, ChevronRight, Quote } from 'lucide-react'\n\ninterface Testimonial {\n  id: number\n  name: string\n  role: string\n  company: string\n  content: string\n  avatar: string\n  rating: number\n}\n\nconst testimonials: Testimonial[] = [\n  {\n    id: 1,\n    name: \"Sarah Johnson\",\n    role: \"Frontend Developer\",\n    company: \"TechCorp\",\n    content: \"Revolutionary UI has transformed how we build interfaces. The AI-powered generation saves us hours of development time while maintaining exceptional quality.\",\n    avatar: \"https://api.dicebear.com/7.x/avataaars/svg?seed=Sarah\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"Michael Chen\",\n    role: \"CTO\",\n    company: \"StartupXYZ\",\n    content: \"The factory pattern approach is genius. We've reduced our codebase by 70% and increased our development velocity significantly. Best investment we've made.\",\n    avatar: \"https://api.dicebear.com/7.x/avataaars/svg?seed=Michael\",\n    rating: 5\n  },\n  {\n    id: 3,\n    name: \"Emily Davis\",\n    role: \"Product Designer\",\n    company: \"DesignHub\",\n    content: \"Finally, a tool that bridges the gap between design and development. The components are beautiful, accessible, and incredibly easy to customize.\",\n    avatar: \"https://api.dicebear.com/7.x/avataaars/svg?seed=Emily\",\n    rating: 5\n  }\n]\n\nexport const TestimonialsSection: React.FC = () => {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true)\n\n  useEffect(() => {\n    if (!isAutoPlaying) return\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % testimonials.length)\n    }, 5000)\n\n    return () => clearInterval(interval)\n  }, [isAutoPlaying])\n\n  const goToPrevious = () => {\n    setIsAutoPlaying(false)\n    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length)\n  }\n\n  const goToNext = () => {\n    setIsAutoPlaying(false)\n    setCurrentIndex((prev) => (prev + 1) % testimonials.length)\n  }\n\n  return (\n    <section className=\"py-24 px-4 bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <span className=\"inline-block px-4 py-2 bg-purple-500/10 text-purple-400 rounded-full text-sm font-medium mb-4\">\n            Testimonials\n          </span>\n          <h2 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\n            Loved by developers worldwide\n          </h2>\n          <p className=\"text-xl text-gray-400 max-w-3xl mx-auto\">\n            See what our users are saying about Revolutionary UI\n          </p>\n        </motion.div>\n\n        <div className=\"relative max-w-4xl mx-auto\">\n          <div className=\"overflow-hidden rounded-2xl bg-gradient-to-br from-gray-800 to-gray-900 p-8 md:p-12\">\n            <AnimatePresence mode=\"wait\">\n              <motion.div\n                key={currentIndex}\n                initial={{ opacity: 0, x: 100 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -100 }}\n                transition={{ duration: 0.3 }}\n                className=\"relative\"\n              >\n                <Quote className=\"absolute -top-4 -left-4 w-12 h-12 text-purple-500/20\" />\n                \n                <div className=\"flex flex-col md:flex-row items-center md:items-start space-y-6 md:space-y-0 md:space-x-8\">\n                  <motion.img\n                    src={testimonials[currentIndex].avatar}\n                    alt={testimonials[currentIndex].name}\n                    className=\"w-24 h-24 rounded-full border-4 border-purple-500/20\"\n                    whileHover={{ scale: 1.1 }}\n                  />\n                  \n                  <div className=\"flex-1 text-center md:text-left\">\n                    <div className=\"flex justify-center md:justify-start mb-4\">\n                      {[...Array(testimonials[currentIndex].rating)].map((_, i) => (\n                        <motion.span\n                          key={i}\n                          initial={{ opacity: 0, scale: 0 }}\n                          animate={{ opacity: 1, scale: 1 }}\n                          transition={{ delay: i * 0.1 }}\n                          className=\"text-yellow-400 text-xl\"\n                        >\n                          ★\n                        </motion.span>\n                      ))}\n                    </div>\n                    \n                    <p className=\"text-lg text-gray-300 mb-6 italic\">\n                      \"{testimonials[currentIndex].content}\"\n                    </p>\n                    \n                    <div>\n                      <p className=\"font-semibold text-white\">\n                        {testimonials[currentIndex].name}\n                      </p>\n                      <p className=\"text-sm text-gray-400\">\n                        {testimonials[currentIndex].role} at {testimonials[currentIndex].company}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            </AnimatePresence>\n          </div>\n\n          {/* Navigation */}\n          <div className=\"flex items-center justify-center mt-8 space-x-4\">\n            <button\n              onClick={goToPrevious}\n              className=\"p-2 rounded-full bg-gray-800 hover:bg-gray-700 transition-colors\"\n            >\n              <ChevronLeft className=\"w-5 h-5 text-white\" />\n            </button>\n            \n            <div className=\"flex space-x-2\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => {\n                    setIsAutoPlaying(false)\n                    setCurrentIndex(index)\n                  }}\n                  className={`w-2 h-2 rounded-full transition-all ${\n                    index === currentIndex\n                      ? 'w-8 bg-purple-500'\n                      : 'bg-gray-600 hover:bg-gray-500'\n                  }`}\n                />\n              ))}\n            </div>\n            \n            <button\n              onClick={goToNext}\n              className=\"p-2 rounded-full bg-gray-800 hover:bg-gray-700 transition-colors\"\n            >\n              <ChevronRight className=\"w-5 h-5 text-white\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\n// stats-section.tsx\nimport { useRef, useState, useEffect } from 'react'\nimport { useInView } from 'framer-motion'\n\ninterface StatCounterProps {\n  end: number\n  duration?: number\n  suffix?: string\n  prefix?: string\n}\n\nconst StatCounter: React.FC<StatCounterProps> = ({ \n  end, \n  duration = 2000, \n  suffix = '', \n  prefix = '' \n}) => {\n  const [count, setCount] = useState(0)\n  const countRef = useRef<HTMLDivElement>(null)\n  const isInView = useInView(countRef, { once: true })\n\n  useEffect(() => {\n    if (!isInView) return\n\n    const startTime = Date.now()\n    const endTime = startTime + duration\n\n    const updateCount = () => {\n      const now = Date.now()\n      const progress = Math.min((now - startTime) / duration, 1)\n      \n      // Easing function for smooth animation\n      const easeOutQuart = 1 - Math.pow(1 - progress, 4)\n      const currentCount = Math.floor(easeOutQuart * end)\n      \n      setCount(currentCount)\n\n      if (progress < 1) {\n        requestAnimationFrame(updateCount)\n      }\n    }\n\n    requestAnimationFrame(updateCount)\n  }, [isInView, end, duration])\n\n  return (\n    <div ref={countRef} className=\"text-4xl md:text-5xl font-bold text-white\">\n      {prefix}{count.toLocaleString()}{suffix}\n    </div>\n  )\n}\n\nexport const StatsSection: React.FC = () => {\n  const stats = [\n    { value: 10000, suffix: '+', label: 'Active Users', prefix: '' },\n    { value: 95, suffix: '%', label: 'Customer Satisfaction', prefix: '' },\n    { value: 500, suffix: '+', label: 'Components Built', prefix: '' },\n    { value: 24, suffix: '/7', label: 'Support Available', prefix: '' }\n  ]\n\n  return (\n    <section className=\"py-24 px-4 bg-gradient-to-br from-purple-900 to-pink-900\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\n            Trusted by thousands of developers\n          </h2>\n          <p className=\"text-xl text-white/80 max-w-3xl mx-auto\">\n            Join the growing community building with Revolutionary UI\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8\">\n          {stats.map((stat, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              className=\"text-center\"\n            >\n              <StatCounter\n                end={stat.value}\n                suffix={stat.suffix}\n                prefix={stat.prefix}\n              />\n              <p className=\"text-white/70 mt-2\">{stat.label}</p>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n\n// footer.tsx\nimport { Github, Twitter, Linkedin, Youtube, Mail } from 'lucide-react'\n\nexport const Footer: React.FC = () => {\n  const currentYear = new Date().getFullYear()\n\n  const footerLinks = [\n    {\n      title: 'Product',\n      links: ['Features', 'Pricing', 'Documentation', 'API Reference']\n    },\n    {\n      title: 'Company',\n      links: ['About', 'Blog', 'Careers', 'Press Kit']\n    },\n    {\n      title: 'Resources',\n      links: ['Community', 'Support', 'Status', 'Security']\n    },\n    {\n      title: 'Legal',\n      links: ['Privacy', 'Terms', 'License', 'Settings']\n    }\n  ]\n\n  const socialLinks = [\n    { icon: Github, href: '#' },\n    { icon: Twitter, href: '#' },\n    { icon: Linkedin, href: '#' },\n    { icon: Youtube, href: '#' }\n  ]\n\n  return (\n    <footer className=\"bg-gray-900 border-t border-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-8\">\n          {/* Brand */}\n          <div className=\"md:col-span-1\">\n            <h3 className=\"text-2xl font-bold text-white mb-4\">\n              Revolutionary UI\n            </h3>\n            <p className=\"text-gray-400 mb-6\">\n              The future of component generation\n            </p>\n            <div className=\"flex space-x-4\">\n              {socialLinks.map((social, index) => {\n                const Icon = social.icon\n                return (\n                  <motion.a\n                    key={index}\n                    href={social.href}\n                    className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors\"\n                    whileHover={{ y: -2 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    <Icon className=\"w-5 h-5 text-gray-400\" />\n                  </motion.a>\n                )\n              })}\n            </div>\n          </div>\n\n          {/* Links */}\n          {footerLinks.map((section, index) => (\n            <div key={index}>\n              <h4 className=\"font-semibold text-white mb-4\">{section.title}</h4>\n              <ul className=\"space-y-2\">\n                {section.links.map((link, linkIndex) => (\n                  <li key={linkIndex}>\n                    <a\n                      href=\"#\"\n                      className=\"text-gray-400 hover:text-white transition-colors\"\n                    >\n                      {link}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        {/* Newsletter */}\n        <div className=\"mt-12 pt-8 border-t border-gray-800\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between\">\n            <div className=\"mb-6 md:mb-0\">\n              <h4 className=\"text-lg font-semibold text-white mb-2\">\n                Subscribe to our newsletter\n              </h4>\n              <p className=\"text-gray-400\">\n                Get the latest updates and news delivered to your inbox\n              </p>\n            </div>\n            <form className=\"flex w-full md:w-auto\">\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                className=\"px-4 py-2 bg-gray-800 text-white rounded-l-lg focus:outline-none focus:ring-2 focus:ring-purple-500 w-full md:w-64\"\n              />\n              <button\n                type=\"submit\"\n                className=\"px-6 py-2 bg-purple-600 text-white rounded-r-lg hover:bg-purple-700 transition-colors flex items-center\"\n              >\n                <Mail className=\"w-4 h-4 mr-2\" />\n                Subscribe\n              </button>\n            </form>\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <div className=\"mt-8 pt-8 border-t border-gray-800 text-center\">\n          <p className=\"text-gray-400\">\n            © {currentYear} Revolutionary UI. All rights reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\n// Complete Landing Page\nimport { HeroSection } from './hero-section'\n\nexport default function LandingPage() {\n  return (\n    <div className=\"min-h-screen bg-black\">\n      <HeroSection />\n      <FeatureSection />\n      <StatsSection />\n      <TestimonialsSection />\n      <Footer />\n    </div>\n  )\n}\n```\n\nThis complete landing page includes:\n\n1. **Bento Box Feature Grid**: Responsive grid layout with varying card sizes\n2. **Animated Testimonials**: Auto-playing carousel with smooth transitions\n3. **Stats Counter**: Scroll-triggered number animations with easing\n4. **Modern Footer**: Newsletter signup, social links, and organized navigation\n5. **Micro-interactions**: Hover effects, scale transforms, and smooth animations\n6. **3D Transforms**: Perspective effects on hover and interaction\n7. **Responsive Design**: Works beautifully on all screen sizes\n8. **Performance Optimized**: Using Framer Motion for smooth 60fps animations\n9. **Accessibility**: Keyboard navigation and ARIA labels\n10. **Modern Styling**: Gradients, glassmorphism, and contemporary design"}]}
{"system": "You are an expert UI developer specializing in creating innovative landing page components and sections in the style of 21st.dev. Focus on unique layouts, scroll-triggered animations, interactive elements, and memorable user experiences. Always use TypeScript, cutting-edge design patterns, and performance optimization.", "messages": [{"role": "user", "content": "Design an interactive FAQ section with collapsible items, search functionality, category filtering, and smooth animations. Also create a CTA section with video background, parallax text, and conversion-focused design."}, {"role": "assistant", "content": "I'll create an interactive FAQ section and a stunning CTA section with all the features you requested.\n\n```tsx\n// faq-section.tsx\nimport React, { useState, useMemo } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Search, ChevronDown, HelpCircle, Book, Settings, CreditCard, Shield, Zap } from 'lucide-react'\n\ninterface FAQItem {\n  id: string\n  question: string\n  answer: string\n  category: string\n}\n\nconst faqData: FAQItem[] = [\n  {\n    id: '1',\n    question: 'What is Revolutionary UI and how does it work?',\n    answer: 'Revolutionary UI is an AI-powered component generation system that uses factory patterns to create production-ready UI components. It analyzes your requirements and generates optimized, accessible, and beautiful components in seconds.',\n    category: 'general'\n  },\n  {\n    id: '2',\n    question: 'Which frameworks are supported?',\n    answer: 'We support React, Vue, Angular, Svelte, and vanilla JavaScript. Each framework has dedicated factories that generate idiomatic code following best practices for that specific ecosystem.',\n    category: 'technical'\n  },\n  {\n    id: '3',\n    question: 'How much does Revolutionary UI cost?',\n    answer: 'We offer a free tier with 50 component generations per month. Pro plans start at $29/month with unlimited generations, premium templates, and priority support. Enterprise plans include custom AI training and dedicated support.',\n    category: 'pricing'\n  },\n  {\n    id: '4',\n    question: 'Is my code secure and private?',\n    answer: 'Absolutely. All code generation happens locally in your environment. We never store or transmit your code. For cloud features, we use end-to-end encryption and follow SOC 2 compliance standards.',\n    category: 'security'\n  },\n  {\n    id: '5',\n    question: 'Can I customize the generated components?',\n    answer: 'Yes! Every component is fully customizable. You can modify styles, behavior, and structure. Our components are generated with clean, readable code that\\'s easy to understand and modify.',\n    category: 'features'\n  },\n  {\n    id: '6',\n    question: 'Do you offer refunds?',\n    answer: 'We offer a 30-day money-back guarantee for all paid plans. If you\\'re not satisfied with Revolutionary UI, contact our support team for a full refund, no questions asked.',\n    category: 'pricing'\n  },\n  {\n    id: '7',\n    question: 'How do I integrate with my existing project?',\n    answer: 'Integration is seamless. Install our CLI tool, run the setup command, and you\\'re ready to generate components. We automatically detect your project structure and configuration.',\n    category: 'technical'\n  },\n  {\n    id: '8',\n    question: 'What kind of support do you provide?',\n    answer: 'Free users get community support via Discord. Pro users get email support with 24-hour response time. Enterprise users get dedicated Slack channels and priority phone support.',\n    category: 'general'\n  }\n]\n\nconst categories = [\n  { id: 'all', name: 'All Topics', icon: HelpCircle },\n  { id: 'general', name: 'General', icon: Book },\n  { id: 'technical', name: 'Technical', icon: Settings },\n  { id: 'pricing', name: 'Pricing', icon: CreditCard },\n  { id: 'security', name: 'Security', icon: Shield },\n  { id: 'features', name: 'Features', icon: Zap }\n]\n\ninterface FAQItemComponentProps {\n  item: FAQItem\n  isOpen: boolean\n  onToggle: () => void\n}\n\nconst FAQItemComponent: React.FC<FAQItemComponentProps> = ({ item, isOpen, onToggle }) => {\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      className=\"border border-gray-800 rounded-lg overflow-hidden hover:border-purple-500/50 transition-colors\"\n    >\n      <motion.button\n        onClick={onToggle}\n        className=\"w-full px-6 py-4 flex items-center justify-between text-left hover:bg-gray-900/50 transition-colors\"\n        whileHover={{ x: 2 }}\n      >\n        <h3 className=\"font-medium text-white pr-4\">{item.question}</h3>\n        <motion.div\n          animate={{ rotate: isOpen ? 180 : 0 }}\n          transition={{ duration: 0.2 }}\n          className=\"flex-shrink-0\"\n        >\n          <ChevronDown className=\"w-5 h-5 text-gray-400\" />\n        </motion.div>\n      </motion.button>\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.3, ease: 'easeInOut' }}\n            className=\"overflow-hidden\"\n          >\n            <div className=\"px-6 py-4 text-gray-400 bg-gray-900/30\">\n              {item.answer}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  )\n}\n\nexport const FAQSection: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState('all')\n  const [openItems, setOpenItems] = useState<Set<string>>(new Set())\n\n  const filteredFAQs = useMemo(() => {\n    return faqData.filter(item => {\n      const matchesSearch = searchQuery === '' || \n        item.question.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        item.answer.toLowerCase().includes(searchQuery.toLowerCase())\n      \n      const matchesCategory = selectedCategory === 'all' || item.category === selectedCategory\n      \n      return matchesSearch && matchesCategory\n    })\n  }, [searchQuery, selectedCategory])\n\n  const toggleItem = (id: string) => {\n    const newOpenItems = new Set(openItems)\n    if (newOpenItems.has(id)) {\n      newOpenItems.delete(id)\n    } else {\n      newOpenItems.add(id)\n    }\n    setOpenItems(newOpenItems)\n  }\n\n  const expandAll = () => {\n    setOpenItems(new Set(filteredFAQs.map(item => item.id)))\n  }\n\n  const collapseAll = () => {\n    setOpenItems(new Set())\n  }\n\n  return (\n    <section className=\"py-24 px-4 bg-black\">\n      <div className=\"max-w-4xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-12\"\n        >\n          <span className=\"inline-block px-4 py-2 bg-purple-500/10 text-purple-400 rounded-full text-sm font-medium mb-4\">\n            FAQ\n          </span>\n          <h2 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\n            Frequently asked questions\n          </h2>\n          <p className=\"text-xl text-gray-400\">\n            Everything you need to know about Revolutionary UI\n          </p>\n        </motion.div>\n\n        {/* Search Bar */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.1 }}\n          className=\"relative mb-8\"\n        >\n          <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search questions...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full pl-12 pr-4 py-3 bg-gray-900 border border-gray-800 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:border-purple-500 transition-colors\"\n          />\n        </motion.div>\n\n        {/* Category Filter */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n          className=\"flex flex-wrap gap-2 mb-6\"\n        >\n          {categories.map((category) => {\n            const Icon = category.icon\n            return (\n              <button\n                key={category.id}\n                onClick={() => setSelectedCategory(category.id)}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${\n                  selectedCategory === category.id\n                    ? 'bg-purple-500 text-white'\n                    : 'bg-gray-900 text-gray-400 hover:bg-gray-800'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span className=\"text-sm font-medium\">{category.name}</span>\n              </button>\n            )\n          })}\n        </motion.div>\n\n        {/* Expand/Collapse All */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n          className=\"flex justify-end gap-2 mb-6\"\n        >\n          <button\n            onClick={expandAll}\n            className=\"text-sm text-purple-400 hover:text-purple-300 transition-colors\"\n          >\n            Expand all\n          </button>\n          <span className=\"text-gray-600\">|</span>\n          <button\n            onClick={collapseAll}\n            className=\"text-sm text-purple-400 hover:text-purple-300 transition-colors\"\n          >\n            Collapse all\n          </button>\n        </motion.div>\n\n        {/* FAQ Items */}\n        <motion.div className=\"space-y-3\">\n          <AnimatePresence mode=\"popLayout\">\n            {filteredFAQs.length === 0 ? (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"text-center py-12 text-gray-400\"\n              >\n                <HelpCircle className=\"w-12 h-12 mx-auto mb-4 text-gray-600\" />\n                <p>No questions found matching your criteria.</p>\n              </motion.div>\n            ) : (\n              filteredFAQs.map((item, index) => (\n                <FAQItemComponent\n                  key={item.id}\n                  item={item}\n                  isOpen={openItems.has(item.id)}\n                  onToggle={() => toggleItem(item.id)}\n                />\n              ))\n            )}\n          </AnimatePresence>\n        </motion.div>\n\n        {/* Contact Support */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n          className=\"mt-12 text-center\"\n        >\n          <p className=\"text-gray-400 mb-4\">\n            Still have questions?\n          </p>\n          <a\n            href=\"#\"\n            className=\"inline-flex items-center space-x-2 text-purple-400 hover:text-purple-300 transition-colors\"\n          >\n            <span>Contact our support team</span>\n            <motion.span whileHover={{ x: 5 }}>\n              →\n            </motion.span>\n          </a>\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n\n// cta-section.tsx\nimport { useRef } from 'react'\nimport { Play, ArrowRight } from 'lucide-react'\nimport { useScroll, useTransform } from 'framer-motion'\n\nexport const CTASection: React.FC = () => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: ['start end', 'end start']\n  })\n\n  // Parallax transforms\n  const y = useTransform(scrollYProgress, [0, 1], [100, -100])\n  const opacity = useTransform(scrollYProgress, [0, 0.3, 0.7, 1], [0.3, 1, 1, 0.3])\n  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.8, 1, 0.8])\n\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false)\n\n  return (\n    <section ref={containerRef} className=\"relative py-32 overflow-hidden\">\n      {/* Video Background */}\n      <div className=\"absolute inset-0 -z-10\">\n        {isVideoPlaying ? (\n          <video\n            autoPlay\n            loop\n            muted\n            className=\"absolute inset-0 w-full h-full object-cover\"\n          >\n            <source src=\"/path-to-your-video.mp4\" type=\"video/mp4\" />\n          </video>\n        ) : (\n          <div className=\"absolute inset-0 bg-gradient-to-br from-purple-900 via-pink-900 to-orange-900\">\n            {/* Animated gradient mesh */}\n            <motion.div\n              className=\"absolute inset-0\"\n              animate={{\n                background: [\n                  'radial-gradient(circle at 20% 50%, rgba(120, 50, 255, 0.4) 0%, transparent 50%)',\n                  'radial-gradient(circle at 80% 50%, rgba(255, 50, 120, 0.4) 0%, transparent 50%)',\n                  'radial-gradient(circle at 20% 50%, rgba(120, 50, 255, 0.4) 0%, transparent 50%)'\n                ]\n              }}\n              transition={{ duration: 10, repeat: Infinity, ease: 'linear' }}\n            />\n          </div>\n        )}\n        \n        {/* Overlay */}\n        <div className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\" />\n      </div>\n\n      {/* Content */}\n      <motion.div\n        style={{ opacity }}\n        className=\"relative z-10 max-w-5xl mx-auto px-4 text-center\"\n      >\n        {/* Play Button for Demo Video */}\n        {!isVideoPlaying && (\n          <motion.button\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setIsVideoPlaying(true)}\n            className=\"mx-auto mb-8 w-20 h-20 bg-white/10 backdrop-blur-md rounded-full flex items-center justify-center border border-white/20 hover:bg-white/20 transition-colors\"\n          >\n            <Play className=\"w-8 h-8 text-white ml-1\" />\n          </motion.button>\n        )}\n\n        {/* Parallax Heading */}\n        <motion.div style={{ y, scale }}>\n          <motion.h2\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-5xl md:text-6xl lg:text-7xl font-bold text-white mb-6\"\n          >\n            Ready to revolutionize\n            <span className=\"block text-transparent bg-clip-text bg-gradient-to-r from-purple-400 via-pink-400 to-orange-400\">\n              your workflow?\n            </span>\n          </motion.h2>\n        </motion.div>\n\n        <motion.p\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.2 }}\n          className=\"text-xl md:text-2xl text-white/80 mb-12 max-w-3xl mx-auto\"\n        >\n          Join thousands of developers who are building faster, smarter, and more beautiful interfaces with Revolutionary UI.\n        </motion.p>\n\n        {/* CTA Buttons */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.4 }}\n          className=\"flex flex-col sm:flex-row items-center justify-center gap-6\"\n        >\n          <motion.button\n            whileHover={{ scale: 1.05, boxShadow: '0 0 40px rgba(168, 85, 247, 0.4)' }}\n            whileTap={{ scale: 0.95 }}\n            className=\"group relative px-8 py-4 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-lg overflow-hidden\"\n          >\n            <span className=\"relative z-10 flex items-center\">\n              Start building for free\n              <ArrowRight className=\"ml-2 w-5 h-5 transition-transform group-hover:translate-x-1\" />\n            </span>\n            <motion.div\n              className=\"absolute inset-0 bg-gradient-to-r from-purple-700 to-pink-700\"\n              initial={{ x: '100%' }}\n              whileHover={{ x: 0 }}\n              transition={{ duration: 0.3 }}\n            />\n          </motion.button>\n\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            className=\"px-8 py-4 bg-white/10 backdrop-blur-md text-white font-semibold rounded-lg border border-white/20 hover:bg-white/20 transition-all\"\n          >\n            Schedule a demo\n          </motion.button>\n        </motion.div>\n\n        {/* Trust Indicators */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: 0.8, delay: 0.6 }}\n          className=\"mt-12 flex items-center justify-center space-x-8 text-white/60\"\n        >\n          <div className=\"flex items-center space-x-2\">\n            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n            </svg>\n            <span>4.9/5 rating</span>\n          </div>\n          <div>•</div>\n          <div>10,000+ developers</div>\n          <div>•</div>\n          <div>30-day guarantee</div>\n        </motion.div>\n      </motion.div>\n\n      {/* Floating Elements */}\n      <motion.div\n        style={{ y: useTransform(scrollYProgress, [0, 1], [0, -200]) }}\n        className=\"absolute top-10 left-10 w-20 h-20 bg-purple-500/20 rounded-full blur-xl\"\n      />\n      <motion.div\n        style={{ y: useTransform(scrollYProgress, [0, 1], [0, 200]) }}\n        className=\"absolute bottom-10 right-10 w-32 h-32 bg-pink-500/20 rounded-full blur-xl\"\n      />\n    </section>\n  )\n}\n\n// Complete page example\nexport default function LandingPageSections() {\n  return (\n    <div className=\"min-h-screen bg-black\">\n      <FAQSection />\n      <CTASection />\n    </div>\n  )\n}\n```\n\nThese components feature:\n\n**FAQ Section:**\n1. **Search Functionality**: Real-time filtering of questions and answers\n2. **Category Filtering**: Filter by topic with icon indicators\n3. **Smooth Animations**: Accordion animations with Framer Motion\n4. **Expand/Collapse All**: Bulk actions for better UX\n5. **Empty State**: Helpful message when no results found\n6. **Hover Effects**: Interactive feedback on all elements\n7. **Responsive Design**: Works perfectly on all devices\n\n**CTA Section:**\n1. **Video Background**: Optional video with fallback gradient\n2. **Parallax Effects**: Scroll-based transformations on text\n3. **Animated Gradients**: Dynamic mesh gradient background\n4. **Conversion-Focused**: Clear value proposition and CTAs\n5. **Trust Indicators**: Social proof elements\n6. **Floating Elements**: Parallax decorative elements\n7. **Hover Animations**: Button effects and interactions\n8. **Responsive Layout**: Adapts to all screen sizes"}]}