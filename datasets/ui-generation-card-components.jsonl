{"messages": [{"role": "system", "content": "You are an expert UI component generator specializing in creating beautiful, modern, accessible card components in the style of 21st.dev. Generate complete, production-ready components with proper TypeScript types, hover effects, responsive design, and modern patterns."}, {"role": "user", "content": "Create a modern card component system with different variants: product cards, blog cards, profile cards, and stat cards. Include hover effects and loading states."}, {"role": "assistant", "content": "```tsx\nimport React, { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Heart, ShoppingCart, Star, Clock, MessageCircle, Share2, MoreVertical, TrendingUp, TrendingDown, Users, Eye, Calendar, Tag, ChevronRight, Bookmark, ThumbsUp } from 'lucide-react'\n\n// Product Card Component\ninterface ProductCardProps {\n  id: string\n  title: string\n  description: string\n  price: number\n  originalPrice?: number\n  currency?: string\n  images: string[]\n  rating: number\n  reviewCount: number\n  badge?: string\n  inStock?: boolean\n  onAddToCart?: (id: string) => void\n  onToggleFavorite?: (id: string) => void\n  isFavorite?: boolean\n}\n\nexport function ProductCard({\n  id,\n  title,\n  description,\n  price,\n  originalPrice,\n  currency = '$',\n  images,\n  rating,\n  reviewCount,\n  badge,\n  inStock = true,\n  onAddToCart,\n  onToggleFavorite,\n  isFavorite = false\n}: ProductCardProps) {\n  const [currentImage, setCurrentImage] = useState(0)\n  const [isHovered, setIsHovered] = useState(false)\n  const discount = originalPrice ? Math.round(((originalPrice - price) / originalPrice) * 100) : 0\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ y: -4 }}\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n      className=\"group relative bg-white rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden\"\n    >\n      {/* Badge */}\n      {badge && (\n        <div className=\"absolute top-3 left-3 z-10\">\n          <span className=\"px-3 py-1 bg-red-500 text-white text-xs font-medium rounded-full\">\n            {badge}\n          </span>\n        </div>\n      )}\n\n      {/* Favorite Button */}\n      <button\n        onClick={() => onToggleFavorite?.(id)}\n        className=\"absolute top-3 right-3 z-10 p-2 bg-white/90 backdrop-blur-sm rounded-full shadow-md hover:scale-110 transition-transform\"\n      >\n        <Heart \n          className={`w-5 h-5 transition-colors ${\n            isFavorite ? 'fill-red-500 text-red-500' : 'text-gray-600'\n          }`}\n        />\n      </button>\n\n      {/* Image Carousel */}\n      <div className=\"relative h-64 overflow-hidden bg-gray-100\">\n        <AnimatePresence mode=\"wait\">\n          <motion.img\n            key={currentImage}\n            src={images[currentImage]}\n            alt={title}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"w-full h-full object-cover\"\n          />\n        </AnimatePresence>\n        \n        {/* Image Dots */}\n        {images.length > 1 && (\n          <div className=\"absolute bottom-3 left-1/2 -translate-x-1/2 flex gap-1.5\">\n            {images.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentImage(index)}\n                className={`w-1.5 h-1.5 rounded-full transition-all ${\n                  index === currentImage\n                    ? 'w-4 bg-white'\n                    : 'bg-white/50 hover:bg-white/75'\n                }`}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* Quick Add to Cart */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: isHovered ? 1 : 0, y: isHovered ? 0 : 20 }}\n          className=\"absolute bottom-4 left-4 right-4\"\n        >\n          <button\n            onClick={() => onAddToCart?.(id)}\n            disabled={!inStock}\n            className=\"w-full py-3 bg-black/90 backdrop-blur-sm text-white rounded-xl font-medium hover:bg-black transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n          >\n            <ShoppingCart className=\"w-4 h-4\" />\n            {inStock ? 'Add to Cart' : 'Out of Stock'}\n          </button>\n        </motion.div>\n      </div>\n\n      {/* Content */}\n      <div className=\"p-5\">\n        {/* Rating */}\n        <div className=\"flex items-center gap-2 mb-2\">\n          <div className=\"flex items-center gap-1\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <Star\n                key={i}\n                className={`w-4 h-4 ${\n                  i < Math.floor(rating)\n                    ? 'fill-yellow-400 text-yellow-400'\n                    : 'text-gray-300'\n                }`}\n              />\n            ))}\n          </div>\n          <span className=\"text-sm text-gray-600\">({reviewCount})</span>\n        </div>\n\n        {/* Title & Description */}\n        <h3 className=\"font-semibold text-gray-900 mb-1 line-clamp-1\">{title}</h3>\n        <p className=\"text-sm text-gray-600 line-clamp-2 mb-3\">{description}</p>\n\n        {/* Price */}\n        <div className=\"flex items-end gap-2\">\n          <span className=\"text-2xl font-bold text-gray-900\">\n            {currency}{price}\n          </span>\n          {originalPrice && (\n            <>\n              <span className=\"text-sm text-gray-500 line-through\">\n                {currency}{originalPrice}\n              </span>\n              <span className=\"text-sm font-medium text-green-600\">\n                -{discount}%\n              </span>\n            </>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\n// Blog Card Component\ninterface BlogCardProps {\n  id: string\n  title: string\n  excerpt: string\n  author: {\n    name: string\n    avatar: string\n  }\n  date: string\n  readTime: string\n  category: string\n  image: string\n  likes: number\n  comments: number\n  views: number\n  onLike?: (id: string) => void\n  onBookmark?: (id: string) => void\n  isLiked?: boolean\n  isBookmarked?: boolean\n}\n\nexport function BlogCard({\n  id,\n  title,\n  excerpt,\n  author,\n  date,\n  readTime,\n  category,\n  image,\n  likes,\n  comments,\n  views,\n  onLike,\n  onBookmark,\n  isLiked = false,\n  isBookmarked = false\n}: BlogCardProps) {\n  return (\n    <motion.article\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ scale: 1.02 }}\n      className=\"group bg-white rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden\"\n    >\n      {/* Image */}\n      <div className=\"relative h-48 overflow-hidden\">\n        <img\n          src={image}\n          alt={title}\n          className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent\" />\n        \n        {/* Category Badge */}\n        <div className=\"absolute top-4 left-4\">\n          <span className=\"px-3 py-1 bg-white/90 backdrop-blur-sm text-xs font-medium rounded-full flex items-center gap-1\">\n            <Tag className=\"w-3 h-3\" />\n            {category}\n          </span>\n        </div>\n\n        {/* Bookmark Button */}\n        <button\n          onClick={() => onBookmark?.(id)}\n          className=\"absolute top-4 right-4 p-2 bg-white/90 backdrop-blur-sm rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n        >\n          <Bookmark\n            className={`w-4 h-4 transition-colors ${\n              isBookmarked ? 'fill-blue-600 text-blue-600' : 'text-gray-600'\n            }`}\n          />\n        </button>\n      </div>\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {/* Title & Excerpt */}\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors\">\n          {title}\n        </h3>\n        <p className=\"text-gray-600 line-clamp-3 mb-4\">{excerpt}</p>\n\n        {/* Author & Meta */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <img\n              src={author.avatar}\n              alt={author.name}\n              className=\"w-10 h-10 rounded-full\"\n            />\n            <div>\n              <p className=\"font-medium text-gray-900\">{author.name}</p>\n              <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n                <Calendar className=\"w-3 h-3\" />\n                <span>{date}</span>\n                <span>â€¢</span>\n                <Clock className=\"w-3 h-3\" />\n                <span>{readTime}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Stats & Actions */}\n        <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={() => onLike?.(id)}\n              className=\"flex items-center gap-1.5 text-sm text-gray-600 hover:text-blue-600 transition-colors\"\n            >\n              <ThumbsUp\n                className={`w-4 h-4 transition-all ${\n                  isLiked ? 'fill-blue-600 text-blue-600' : ''\n                }`}\n              />\n              <span>{likes}</span>\n            </button>\n            <div className=\"flex items-center gap-1.5 text-sm text-gray-600\">\n              <MessageCircle className=\"w-4 h-4\" />\n              <span>{comments}</span>\n            </div>\n            <div className=\"flex items-center gap-1.5 text-sm text-gray-600\">\n              <Eye className=\"w-4 h-4\" />\n              <span>{views}</span>\n            </div>\n          </div>\n          <button className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\n            <Share2 className=\"w-4 h-4 text-gray-600\" />\n          </button>\n        </div>\n      </div>\n    </motion.article>\n  )\n}\n\n// Profile Card Component\ninterface ProfileCardProps {\n  id: string\n  name: string\n  role: string\n  bio: string\n  avatar: string\n  coverImage?: string\n  stats: {\n    followers: number\n    following: number\n    posts: number\n  }\n  skills?: string[]\n  isFollowing?: boolean\n  onFollow?: (id: string) => void\n  onMessage?: (id: string) => void\n}\n\nexport function ProfileCard({\n  id,\n  name,\n  role,\n  bio,\n  avatar,\n  coverImage,\n  stats,\n  skills = [],\n  isFollowing = false,\n  onFollow,\n  onMessage\n}: ProfileCardProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.95 }}\n      animate={{ opacity: 1, scale: 1 }}\n      whileHover={{ y: -4 }}\n      className=\"bg-white rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden\"\n    >\n      {/* Cover Image */}\n      <div className=\"relative h-32 bg-gradient-to-br from-blue-500 to-purple-600\">\n        {coverImage && (\n          <img\n            src={coverImage}\n            alt=\"Cover\"\n            className=\"w-full h-full object-cover\"\n          />\n        )}\n        <button className=\"absolute top-4 right-4 p-1.5 bg-white/20 backdrop-blur-sm rounded-full hover:bg-white/30 transition-colors\">\n          <MoreVertical className=\"w-4 h-4 text-white\" />\n        </button>\n      </div>\n\n      {/* Profile Content */}\n      <div className=\"px-6 pb-6\">\n        {/* Avatar */}\n        <div className=\"relative -mt-12 mb-4\">\n          <img\n            src={avatar}\n            alt={name}\n            className=\"w-24 h-24 rounded-full border-4 border-white shadow-lg\"\n          />\n          <div className=\"absolute bottom-0 right-0 w-6 h-6 bg-green-500 border-2 border-white rounded-full\" />\n        </div>\n\n        {/* Name & Role */}\n        <h3 className=\"text-xl font-semibold text-gray-900\">{name}</h3>\n        <p className=\"text-gray-600 mb-3\">{role}</p>\n\n        {/* Bio */}\n        <p className=\"text-sm text-gray-600 mb-4 line-clamp-2\">{bio}</p>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-3 gap-4 py-4 border-y border-gray-100\">\n          <div className=\"text-center\">\n            <p className=\"text-xl font-semibold text-gray-900\">\n              {stats.followers >= 1000 ? `${(stats.followers / 1000).toFixed(1)}k` : stats.followers}\n            </p>\n            <p className=\"text-sm text-gray-600\">Followers</p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xl font-semibold text-gray-900\">\n              {stats.following >= 1000 ? `${(stats.following / 1000).toFixed(1)}k` : stats.following}\n            </p>\n            <p className=\"text-sm text-gray-600\">Following</p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xl font-semibold text-gray-900\">{stats.posts}</p>\n            <p className=\"text-sm text-gray-600\">Posts</p>\n          </div>\n        </div>\n\n        {/* Skills */}\n        {skills.length > 0 && (\n          <div className=\"py-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              {skills.slice(0, 4).map((skill) => (\n                <span\n                  key={skill}\n                  className=\"px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full\"\n                >\n                  {skill}\n                </span>\n              ))}\n              {skills.length > 4 && (\n                <span className=\"px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full\">\n                  +{skills.length - 4}\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Actions */}\n        <div className=\"flex gap-3 mt-4\">\n          <button\n            onClick={() => onFollow?.(id)}\n            className={`flex-1 py-2 rounded-xl font-medium transition-colors ${\n              isFollowing\n                ? 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                : 'bg-blue-600 text-white hover:bg-blue-700'\n            }`}\n          >\n            {isFollowing ? 'Following' : 'Follow'}\n          </button>\n          <button\n            onClick={() => onMessage?.(id)}\n            className=\"flex-1 py-2 bg-gray-100 text-gray-700 rounded-xl font-medium hover:bg-gray-200 transition-colors\"\n          >\n            Message\n          </button>\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\n// Stat Card Component\ninterface StatCardProps {\n  title: string\n  value: string | number\n  change?: number\n  changeLabel?: string\n  icon: React.ReactNode\n  color: 'blue' | 'green' | 'purple' | 'orange' | 'red'\n  loading?: boolean\n}\n\nexport function StatCard({\n  title,\n  value,\n  change,\n  changeLabel,\n  icon,\n  color,\n  loading = false\n}: StatCardProps) {\n  const colorClasses = {\n    blue: 'bg-blue-500',\n    green: 'bg-green-500',\n    purple: 'bg-purple-500',\n    orange: 'bg-orange-500',\n    red: 'bg-red-500'\n  }\n\n  const changeColorClasses = {\n    positive: 'text-green-600 bg-green-50',\n    negative: 'text-red-600 bg-red-50',\n    neutral: 'text-gray-600 bg-gray-50'\n  }\n\n  const changeType = change ? (change > 0 ? 'positive' : 'negative') : 'neutral'\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ scale: 1.02 }}\n      className=\"bg-white rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300 p-6\"\n    >\n      {loading ? (\n        <div className=\"space-y-3 animate-pulse\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"w-12 h-12 bg-gray-200 rounded-xl\" />\n            <div className=\"w-20 h-6 bg-gray-200 rounded\" />\n          </div>\n          <div className=\"space-y-2\">\n            <div className=\"w-24 h-4 bg-gray-200 rounded\" />\n            <div className=\"w-32 h-8 bg-gray-200 rounded\" />\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className={`p-3 rounded-xl ${colorClasses[color]} bg-opacity-10`}>\n              <div className={`${colorClasses[color]} bg-opacity-100 text-white rounded-lg p-2`}>\n                {icon}\n              </div>\n            </div>\n            {change !== undefined && (\n              <div className={`flex items-center gap-1 px-2 py-1 rounded-lg text-sm font-medium ${changeColorClasses[changeType]}`}>\n                {change > 0 ? (\n                  <TrendingUp className=\"w-4 h-4\" />\n                ) : change < 0 ? (\n                  <TrendingDown className=\"w-4 h-4\" />\n                ) : null}\n                <span>{change > 0 ? '+' : ''}{change}%</span>\n              </div>\n            )}\n          </div>\n          \n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">{title}</p>\n            <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\n            {changeLabel && (\n              <p className=\"text-xs text-gray-500 mt-1\">{changeLabel}</p>\n            )}\n          </div>\n        </>\n      )}\n    </motion.div>\n  )\n}\n\n// Card Loading Skeleton\nexport function CardSkeleton() {\n  return (\n    <div className=\"bg-white rounded-2xl shadow-sm p-6 animate-pulse\">\n      <div className=\"space-y-4\">\n        <div className=\"h-48 bg-gray-200 rounded-xl\" />\n        <div className=\"space-y-2\">\n          <div className=\"h-6 bg-gray-200 rounded w-3/4\" />\n          <div className=\"h-4 bg-gray-200 rounded w-full\" />\n          <div className=\"h-4 bg-gray-200 rounded w-2/3\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-8 bg-gray-200 rounded-full w-20\" />\n          <div className=\"h-8 bg-gray-200 rounded-full w-20\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Example usage component\nexport function CardShowcase() {\n  const [favorites, setFavorites] = useState<Set<string>>(new Set())\n  const [following, setFollowing] = useState<Set<string>>(new Set())\n  const [likes, setLikes] = useState<Set<string>>(new Set())\n  const [bookmarks, setBookmarks] = useState<Set<string>>(new Set())\n\n  const toggleFavorite = (id: string) => {\n    setFavorites(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(id)) {\n        newSet.delete(id)\n      } else {\n        newSet.add(id)\n      }\n      return newSet\n    })\n  }\n\n  const toggleFollowing = (id: string) => {\n    setFollowing(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(id)) {\n        newSet.delete(id)\n      } else {\n        newSet.add(id)\n      }\n      return newSet\n    })\n  }\n\n  const toggleLike = (id: string) => {\n    setLikes(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(id)) {\n        newSet.delete(id)\n      } else {\n        newSet.add(id)\n      }\n      return newSet\n    })\n  }\n\n  const toggleBookmark = (id: string) => {\n    setBookmarks(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(id)) {\n        newSet.delete(id)\n      } else {\n        newSet.add(id)\n      }\n      return newSet\n    })\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-7xl mx-auto space-y-12\">\n        {/* Header */}\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Card Components</h1>\n          <p className=\"text-gray-600\">Beautiful, modern card designs with interactions</p>\n        </div>\n\n        {/* Stat Cards */}\n        <section>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Stat Cards</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <StatCard\n              title=\"Total Revenue\"\n              value=\"$48,574\"\n              change={12.5}\n              changeLabel=\"vs last month\"\n              icon={<TrendingUp className=\"w-5 h-5\" />}\n              color=\"blue\"\n            />\n            <StatCard\n              title=\"Active Users\"\n              value=\"3,842\"\n              change={8.2}\n              changeLabel=\"vs last month\"\n              icon={<Users className=\"w-5 h-5\" />}\n              color=\"green\"\n            />\n            <StatCard\n              title=\"Conversion Rate\"\n              value=\"2.4%\"\n              change={-3.1}\n              changeLabel=\"vs last month\"\n              icon={<TrendingDown className=\"w-5 h-5\" />}\n              color=\"orange\"\n            />\n            <StatCard\n              title=\"Loading Example\"\n              value=\"-\"\n              icon={<Clock className=\"w-5 h-5\" />}\n              color=\"purple\"\n              loading\n            />\n          </div>\n        </section>\n\n        {/* Product Cards */}\n        <section>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Product Cards</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <ProductCard\n              id=\"1\"\n              title=\"Wireless Headphones Pro\"\n              description=\"Premium noise-cancelling headphones with 30-hour battery life\"\n              price={299}\n              originalPrice={399}\n              images={[\n                'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=800',\n                'https://images.unsplash.com/photo-1583394838336-acd977736f90?w=800'\n              ]}\n              rating={4.5}\n              reviewCount={128}\n              badge=\"25% OFF\"\n              isFavorite={favorites.has('1')}\n              onToggleFavorite={toggleFavorite}\n              onAddToCart={(id) => console.log('Add to cart:', id)}\n            />\n            <ProductCard\n              id=\"2\"\n              title=\"Smart Watch Series 5\"\n              description=\"Track your fitness and stay connected with the latest smartwatch\"\n              price={399}\n              images={[\n                'https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=800'\n              ]}\n              rating={4.8}\n              reviewCount={256}\n              badge=\"NEW\"\n              isFavorite={favorites.has('2')}\n              onToggleFavorite={toggleFavorite}\n              onAddToCart={(id) => console.log('Add to cart:', id)}\n            />\n            <ProductCard\n              id=\"3\"\n              title=\"Premium Camera Lens\"\n              description=\"Professional 85mm f/1.4 portrait lens for stunning photography\"\n              price={1299}\n              originalPrice={1599}\n              images={[\n                'https://images.unsplash.com/photo-1606986628253-05620e9b0a80?w=800'\n              ]}\n              rating={5}\n              reviewCount={89}\n              inStock={false}\n              isFavorite={favorites.has('3')}\n              onToggleFavorite={toggleFavorite}\n              onAddToCart={(id) => console.log('Add to cart:', id)}\n            />\n          </div>\n        </section>\n\n        {/* Blog Cards */}\n        <section>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Blog Cards</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <BlogCard\n              id=\"blog1\"\n              title=\"The Future of Web Development: Trends to Watch in 2024\"\n              excerpt=\"Explore the cutting-edge technologies and methodologies shaping the web development landscape this year.\"\n              author={{\n                name: 'Sarah Johnson',\n                avatar: 'https://i.pravatar.cc/150?img=1'\n              }}\n              date=\"Mar 20, 2024\"\n              readTime=\"5 min read\"\n              category=\"Technology\"\n              image=\"https://images.unsplash.com/photo-1498050108023-c5249f4df085?w=800\"\n              likes={245}\n              comments={32}\n              views={1420}\n              isLiked={likes.has('blog1')}\n              isBookmarked={bookmarks.has('blog1')}\n              onLike={toggleLike}\n              onBookmark={toggleBookmark}\n            />\n            <BlogCard\n              id=\"blog2\"\n              title=\"Building Scalable Design Systems: A Comprehensive Guide\"\n              excerpt=\"Learn how to create and maintain design systems that grow with your organization.\"\n              author={{\n                name: 'Mike Chen',\n                avatar: 'https://i.pravatar.cc/150?img=2'\n              }}\n              date=\"Mar 18, 2024\"\n              readTime=\"8 min read\"\n              category=\"Design\"\n              image=\"https://images.unsplash.com/photo-1561070791-2526d30994b5?w=800\"\n              likes={189}\n              comments={24}\n              views={892}\n              isLiked={likes.has('blog2')}\n              isBookmarked={bookmarks.has('blog2')}\n              onLike={toggleLike}\n              onBookmark={toggleBookmark}\n            />\n            <BlogCard\n              id=\"blog3\"\n              title=\"Optimizing React Performance: Tips and Tricks\"\n              excerpt=\"Discover practical techniques to boost your React application's performance and user experience.\"\n              author={{\n                name: 'Emma Wilson',\n                avatar: 'https://i.pravatar.cc/150?img=3'\n              }}\n              date=\"Mar 15, 2024\"\n              readTime=\"6 min read\"\n              category=\"React\"\n              image=\"https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=800\"\n              likes={312}\n              comments={45}\n              views={2103}\n              isLiked={likes.has('blog3')}\n              isBookmarked={bookmarks.has('blog3')}\n              onLike={toggleLike}\n              onBookmark={toggleBookmark}\n            />\n          </div>\n        </section>\n\n        {/* Profile Cards */}\n        <section>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Profile Cards</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <ProfileCard\n              id=\"profile1\"\n              name=\"Alex Rivera\"\n              role=\"Senior UI/UX Designer\"\n              bio=\"Passionate about creating beautiful and functional digital experiences. 10+ years in the industry.\"\n              avatar=\"https://i.pravatar.cc/150?img=4\"\n              stats={{\n                followers: 3842,\n                following: 234,\n                posts: 156\n              }}\n              skills={['UI Design', 'Figma', 'Prototyping', 'Design Systems', 'React']}\n              isFollowing={following.has('profile1')}\n              onFollow={toggleFollowing}\n              onMessage={(id) => console.log('Message:', id)}\n            />\n            <ProfileCard\n              id=\"profile2\"\n              name=\"Jordan Kim\"\n              role=\"Full Stack Developer\"\n              bio=\"Building scalable web applications with modern technologies. Open source enthusiast.\"\n              avatar=\"https://i.pravatar.cc/150?img=5\"\n              coverImage=\"https://images.unsplash.com/photo-1517694712202-14dd9538aa97?w=800\"\n              stats={{\n                followers: 12500,\n                following: 456,\n                posts: 234\n              }}\n              skills={['React', 'Node.js', 'TypeScript', 'AWS']}\n              isFollowing={following.has('profile2')}\n              onFollow={toggleFollowing}\n              onMessage={(id) => console.log('Message:', id)}\n            />\n            <ProfileCard\n              id=\"profile3\"\n              name=\"Taylor Martinez\"\n              role=\"Product Manager\"\n              bio=\"Helping teams build products that users love. Ex-Google, Stanford MBA.\"\n              avatar=\"https://i.pravatar.cc/150?img=6\"\n              stats={{\n                followers: 8921,\n                following: 678,\n                posts: 432\n              }}\n              skills={['Product Strategy', 'Analytics', 'User Research']}\n              isFollowing={following.has('profile3')}\n              onFollow={toggleFollowing}\n              onMessage={(id) => console.log('Message:', id)}\n            />\n          </div>\n        </section>\n\n        {/* Loading Skeletons */}\n        <section>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Loading States</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <CardSkeleton />\n            <CardSkeleton />\n            <CardSkeleton />\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n```"}]}
{"messages": [{"role": "system", "content": "You are an expert UI component generator specializing in creating beautiful, modern, accessible card components in the style of 21st.dev. Generate complete, production-ready components with proper TypeScript types, hover effects, responsive design, and modern patterns."}, {"role": "user", "content": "Create feature cards, testimonial cards, team member cards, and service cards with glassmorphism effects and micro-interactions."}, {"role": "assistant", "content": "```tsx\nimport React, { useState } from 'react'\nimport { motion, useMotionValue, useTransform } from 'framer-motion'\nimport { Check, ChevronRight, Quote, Linkedin, Twitter, Github, Mail, Phone, MapPin, Award, Briefcase, GraduationCap, Sparkles, Zap, Shield, Cpu, Cloud, Lock } from 'lucide-react'\n\n// Feature Card with Glassmorphism\ninterface FeatureCardProps {\n  title: string\n  description: string\n  icon: React.ReactNode\n  features: string[]\n  gradient: string\n  delay?: number\n}\n\nexport function FeatureCard({\n  title,\n  description,\n  icon,\n  features,\n  gradient,\n  delay = 0\n}: FeatureCardProps) {\n  const [isHovered, setIsHovered] = useState(false)\n  const mouseX = useMotionValue(0)\n  const mouseY = useMotionValue(0)\n  \n  const rotateX = useTransform(mouseY, [-100, 100], [10, -10])\n  const rotateY = useTransform(mouseX, [-100, 100], [-10, 10])\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect()\n    const x = e.clientX - rect.left - rect.width / 2\n    const y = e.clientY - rect.top - rect.height / 2\n    mouseX.set(x)\n    mouseY.set(y)\n  }\n\n  const handleMouseLeave = () => {\n    mouseX.set(0)\n    mouseY.set(0)\n    setIsHovered(false)\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 50 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, delay }}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        rotateX,\n        rotateY,\n        transformStyle: 'preserve-3d'\n      }}\n      className=\"relative group\"\n    >\n      {/* Gradient Background */}\n      <div\n        className={`absolute inset-0 ${gradient} rounded-3xl blur-xl opacity-50 group-hover:opacity-75 transition-opacity duration-500`}\n      />\n      \n      {/* Glass Card */}\n      <motion.div\n        className=\"relative bg-white/10 backdrop-blur-xl border border-white/20 rounded-3xl p-8 h-full transform-gpu\"\n        whileHover={{ scale: 1.02 }}\n        transition={{ type: 'spring', stiffness: 300 }}\n      >\n        {/* Animated Border Gradient */}\n        <div className=\"absolute inset-0 rounded-3xl overflow-hidden\">\n          <motion.div\n            className={`absolute inset-0 ${gradient} opacity-0 group-hover:opacity-100 transition-opacity duration-500`}\n            style={{\n              maskImage: 'radial-gradient(circle at center, transparent 65%, black 70%)',\n              WebkitMaskImage: 'radial-gradient(circle at center, transparent 65%, black 70%)'\n            }}\n          />\n        </div>\n\n        {/* Icon */}\n        <motion.div\n          className=\"relative w-16 h-16 mb-6\"\n          animate={{ rotate: isHovered ? 360 : 0 }}\n          transition={{ duration: 0.8, ease: 'easeInOut' }}\n        >\n          <div className={`absolute inset-0 ${gradient} rounded-2xl blur-lg opacity-60`} />\n          <div className=\"relative bg-white/20 backdrop-blur-sm rounded-2xl w-full h-full flex items-center justify-center border border-white/30\">\n            <div className=\"text-white\">\n              {icon}\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Content */}\n        <h3 className=\"text-2xl font-bold text-white mb-3\">{title}</h3>\n        <p className=\"text-white/80 mb-6 leading-relaxed\">{description}</p>\n        \n        {/* Features List */}\n        <ul className=\"space-y-3\">\n          {features.map((feature, index) => (\n            <motion.li\n              key={index}\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: delay + 0.1 * index }}\n              className=\"flex items-center gap-3 text-white/90\"\n            >\n              <div className=\"flex-shrink-0 w-5 h-5 bg-white/20 rounded-full flex items-center justify-center\">\n                <Check className=\"w-3 h-3\" />\n              </div>\n              <span className=\"text-sm\">{feature}</span>\n            </motion.li>\n          ))}\n        </ul>\n\n        {/* CTA */}\n        <motion.div\n          className=\"mt-8 flex items-center gap-2 text-white font-medium\"\n          whileHover={{ x: 10 }}\n        >\n          <span>Learn more</span>\n          <ChevronRight className=\"w-5 h-5\" />\n        </motion.div>\n      </motion.div>\n    </motion.div>\n  )\n}\n\n// Testimonial Card\ninterface TestimonialCardProps {\n  quote: string\n  author: {\n    name: string\n    role: string\n    company: string\n    avatar: string\n  }\n  rating?: number\n  featured?: boolean\n}\n\nexport function TestimonialCard({\n  quote,\n  author,\n  rating = 5,\n  featured = false\n}: TestimonialCardProps) {\n  const [isFlipped, setIsFlipped] = useState(false)\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      whileHover={{ y: -10 }}\n      className=\"relative h-full\"\n    >\n      {/* Background Blur */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-3xl blur-2xl\" />\n      \n      {/* Card */}\n      <div\n        className={`relative h-full bg-white/10 backdrop-blur-xl border rounded-3xl p-8 transition-all duration-300 ${\n          featured ? 'border-purple-500/50' : 'border-white/20'\n        }`}\n      >\n        {/* Featured Badge */}\n        {featured && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"absolute -top-3 left-8 px-4 py-1 bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs font-medium rounded-full\"\n          >\n            Featured Review\n          </motion.div>\n        )}\n\n        {/* Quote Icon */}\n        <div className=\"mb-6\">\n          <Quote className=\"w-10 h-10 text-white/30\" />\n        </div>\n\n        {/* Quote Text */}\n        <blockquote className=\"text-white/90 text-lg leading-relaxed mb-6\">\n          {quote}\n        </blockquote>\n\n        {/* Rating */}\n        <div className=\"flex gap-1 mb-6\">\n          {Array.from({ length: 5 }).map((_, i) => (\n            <motion.div\n              key={i}\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: i * 0.1 }}\n            >\n              <svg\n                className={`w-5 h-5 ${\n                  i < rating ? 'text-yellow-400 fill-yellow-400' : 'text-white/20'\n                }`}\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n              </svg>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Author */}\n        <div className=\"flex items-center gap-4\">\n          <motion.img\n            whileHover={{ scale: 1.1, rotate: 360 }}\n            transition={{ duration: 0.5 }}\n            src={author.avatar}\n            alt={author.name}\n            className=\"w-14 h-14 rounded-full border-2 border-white/30\"\n          />\n          <div>\n            <p className=\"font-semibold text-white\">{author.name}</p>\n            <p className=\"text-sm text-white/70\">\n              {author.role} at {author.company}\n            </p>\n          </div>\n        </div>\n\n        {/* Hover Effect - Flip Card */}\n        <motion.div\n          className=\"absolute inset-0 bg-gradient-to-br from-purple-600/90 to-pink-600/90 backdrop-blur-xl rounded-3xl p-8 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity duration-300\"\n          onHoverStart={() => setIsFlipped(true)}\n          onHoverEnd={() => setIsFlipped(false)}\n        >\n          <div className=\"text-center text-white\">\n            <p className=\"text-2xl font-bold mb-2\">Thank You!</p>\n            <p className=\"text-white/80\">Your feedback helps us improve</p>\n          </div>\n        </motion.div>\n      </div>\n    </motion.div>\n  )\n}\n\n// Team Member Card\ninterface TeamMemberCardProps {\n  name: string\n  role: string\n  bio: string\n  avatar: string\n  expertise: string[]\n  social: {\n    linkedin?: string\n    twitter?: string\n    github?: string\n    email?: string\n  }\n  achievements?: {\n    icon: React.ReactNode\n    label: string\n  }[]\n}\n\nexport function TeamMemberCard({\n  name,\n  role,\n  bio,\n  avatar,\n  expertise,\n  social,\n  achievements = []\n}: TeamMemberCardProps) {\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, y: 50 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"relative\"\n    >\n      {/* Gradient Background */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/20 to-purple-500/20 rounded-3xl blur-2xl\" />\n      \n      {/* Card */}\n      <motion.div\n        layout\n        className=\"relative bg-white/10 backdrop-blur-xl border border-white/20 rounded-3xl overflow-hidden\"\n        whileHover={{ scale: 1.02 }}\n        transition={{ type: 'spring', stiffness: 300 }}\n      >\n        {/* Header Section */}\n        <div className=\"relative p-8\">\n          {/* Avatar with Animation */}\n          <motion.div\n            className=\"relative w-32 h-32 mx-auto mb-6\"\n            whileHover={{ scale: 1.1 }}\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full blur-lg opacity-60\" />\n            <img\n              src={avatar}\n              alt={name}\n              className=\"relative w-full h-full rounded-full object-cover border-4 border-white/30\"\n            />\n            <motion.div\n              className=\"absolute -bottom-2 -right-2 w-10 h-10 bg-green-500 rounded-full border-4 border-white/30\"\n              animate={{ scale: [1, 1.2, 1] }}\n              transition={{ repeat: Infinity, duration: 2 }}\n            />\n          </motion.div>\n\n          {/* Name & Role */}\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-2xl font-bold text-white mb-2\">{name}</h3>\n            <p className=\"text-white/80 font-medium\">{role}</p>\n          </div>\n\n          {/* Social Links */}\n          <div className=\"flex justify-center gap-3\">\n            {social.linkedin && (\n              <motion.a\n                href={social.linkedin}\n                whileHover={{ scale: 1.2, rotate: 360 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-colors\"\n              >\n                <Linkedin className=\"w-5 h-5\" />\n              </motion.a>\n            )}\n            {social.twitter && (\n              <motion.a\n                href={social.twitter}\n                whileHover={{ scale: 1.2, rotate: 360 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-colors\"\n              >\n                <Twitter className=\"w-5 h-5\" />\n              </motion.a>\n            )}\n            {social.github && (\n              <motion.a\n                href={social.github}\n                whileHover={{ scale: 1.2, rotate: 360 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-colors\"\n              >\n                <Github className=\"w-5 h-5\" />\n              </motion.a>\n            )}\n            {social.email && (\n              <motion.a\n                href={`mailto:${social.email}`}\n                whileHover={{ scale: 1.2, rotate: 360 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center text-white hover:bg-white/30 transition-colors\"\n              >\n                <Mail className=\"w-5 h-5\" />\n              </motion.a>\n            )}\n          </div>\n        </div>\n\n        {/* Expandable Content */}\n        <motion.div\n          layout\n          className=\"px-8 pb-8\"\n        >\n          {/* Bio */}\n          <motion.p\n            layout\n            className={`text-white/80 text-center mb-6 ${!isExpanded ? 'line-clamp-2' : ''}`}\n          >\n            {bio}\n          </motion.p>\n\n          {/* Expertise Tags */}\n          <div className=\"flex flex-wrap justify-center gap-2 mb-6\">\n            {expertise.map((skill, index) => (\n              <motion.span\n                key={skill}\n                initial={{ opacity: 0, scale: 0 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: index * 0.1 }}\n                className=\"px-3 py-1 bg-white/20 backdrop-blur-sm rounded-full text-sm text-white\"\n              >\n                {skill}\n              </motion.span>\n            ))}\n          </div>\n\n          {/* Achievements (shown when expanded) */}\n          {isExpanded && achievements.length > 0 && (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"space-y-3 mb-6\"\n            >\n              {achievements.map((achievement, index) => (\n                <div key={index} className=\"flex items-center gap-3 text-white/80\">\n                  <div className=\"w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    {achievement.icon}\n                  </div>\n                  <span className=\"text-sm\">{achievement.label}</span>\n                </div>\n              ))}\n            </motion.div>\n          )}\n\n          {/* Expand/Collapse Button */}\n          <motion.button\n            onClick={() => setIsExpanded(!isExpanded)}\n            className=\"w-full py-3 bg-white/20 backdrop-blur-sm rounded-xl text-white font-medium hover:bg-white/30 transition-colors\"\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            {isExpanded ? 'Show Less' : 'Show More'}\n          </motion.button>\n        </motion.div>\n      </motion.div>\n    </motion.div>\n  )\n}\n\n// Service Card\ninterface ServiceCardProps {\n  title: string\n  description: string\n  icon: React.ReactNode\n  price: {\n    amount: string\n    period?: string\n  }\n  features: string[]\n  cta: {\n    text: string\n    onClick: () => void\n  }\n  popular?: boolean\n  gradient: string\n}\n\nexport function ServiceCard({\n  title,\n  description,\n  icon,\n  price,\n  features,\n  cta,\n  popular = false,\n  gradient\n}: ServiceCardProps) {\n  const [isHovered, setIsHovered] = useState(false)\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 50 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ y: -10 }}\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n      className=\"relative h-full\"\n    >\n      {/* Popular Badge */}\n      {popular && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"absolute -top-4 left-1/2 -translate-x-1/2 z-10\"\n        >\n          <div className=\"px-6 py-2 bg-gradient-to-r from-orange-500 to-pink-500 text-white text-sm font-bold rounded-full shadow-lg flex items-center gap-2\">\n            <Sparkles className=\"w-4 h-4\" />\n            Most Popular\n          </div>\n        </motion.div>\n      )}\n\n      {/* Animated Background */}\n      <div className=\"absolute inset-0 rounded-3xl overflow-hidden\">\n        <motion.div\n          className={`absolute inset-0 ${gradient} opacity-20`}\n          animate={{\n            scale: isHovered ? 1.2 : 1,\n            rotate: isHovered ? 45 : 0\n          }}\n          transition={{ duration: 0.5 }}\n        />\n      </div>\n      \n      {/* Card */}\n      <div className={`relative h-full bg-white/10 backdrop-blur-xl border rounded-3xl p-8 flex flex-col ${\n        popular ? 'border-orange-500/50' : 'border-white/20'\n      }`}>\n        {/* Icon */}\n        <motion.div\n          className=\"w-20 h-20 mx-auto mb-6\"\n          animate={{\n            rotate: isHovered ? 360 : 0,\n            scale: isHovered ? 1.1 : 1\n          }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"relative w-full h-full\">\n            <div className={`absolute inset-0 ${gradient} rounded-2xl blur-lg opacity-60`} />\n            <div className=\"relative bg-white/20 backdrop-blur-sm rounded-2xl w-full h-full flex items-center justify-center border border-white/30\">\n              <div className=\"text-white\">\n                {icon}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Title & Description */}\n        <h3 className=\"text-2xl font-bold text-white text-center mb-3\">{title}</h3>\n        <p className=\"text-white/80 text-center mb-6\">{description}</p>\n\n        {/* Price */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-baseline justify-center gap-2\">\n            <span className=\"text-4xl font-bold text-white\">{price.amount}</span>\n            {price.period && (\n              <span className=\"text-white/60\">/{price.period}</span>\n            )}\n          </div>\n        </div>\n\n        {/* Features */}\n        <ul className=\"space-y-3 mb-8 flex-1\">\n          {features.map((feature, index) => (\n            <motion.li\n              key={index}\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: index * 0.1 }}\n              className=\"flex items-start gap-3\"\n            >\n              <div className=\"w-5 h-5 bg-white/20 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                <Check className=\"w-3 h-3 text-white\" />\n              </div>\n              <span className=\"text-white/90 text-sm\">{feature}</span>\n            </motion.li>\n          ))}\n        </ul>\n\n        {/* CTA Button */}\n        <motion.button\n          onClick={cta.onClick}\n          className={`w-full py-4 rounded-xl font-bold transition-all ${\n            popular\n              ? 'bg-gradient-to-r from-orange-500 to-pink-500 text-white hover:shadow-lg hover:shadow-orange-500/25'\n              : 'bg-white/20 backdrop-blur-sm text-white hover:bg-white/30'\n          }`}\n          whileHover={{ scale: 1.02 }}\n          whileTap={{ scale: 0.98 }}\n        >\n          {cta.text}\n        </motion.button>\n      </div>\n    </motion.div>\n  )\n}\n\n// Example Showcase\nexport function GlassmorphismCardShowcase() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-8\">\n      {/* Animated Background */}\n      <div className=\"fixed inset-0 overflow-hidden\">\n        <div className=\"absolute -top-1/2 -left-1/2 w-full h-full bg-gradient-to-br from-pink-500/20 to-purple-500/20 rounded-full blur-3xl animate-pulse\" />\n        <div className=\"absolute -bottom-1/2 -right-1/2 w-full h-full bg-gradient-to-br from-blue-500/20 to-cyan-500/20 rounded-full blur-3xl animate-pulse animation-delay-2000\" />\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto space-y-20\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <h1 className=\"text-5xl font-bold text-white\">Glassmorphism Cards</h1>\n          <p className=\"text-xl text-white/80\">Beautiful glass-effect cards with micro-interactions</p>\n        </div>\n\n        {/* Feature Cards */}\n        <section>\n          <h2 className=\"text-3xl font-bold text-white mb-10 text-center\">Feature Cards</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <FeatureCard\n              title=\"AI-Powered\"\n              description=\"Leverage cutting-edge artificial intelligence to automate and optimize your workflow\"\n              icon={<Cpu className=\"w-8 h-8\" />}\n              features={[\n                'Natural language processing',\n                'Predictive analytics',\n                'Automated insights',\n                'Machine learning models'\n              ]}\n              gradient=\"bg-gradient-to-br from-purple-600 to-pink-600\"\n              delay={0}\n            />\n            <FeatureCard\n              title=\"Cloud Native\"\n              description=\"Built for the cloud with scalability, reliability, and performance in mind\"\n              icon={<Cloud className=\"w-8 h-8\" />}\n              features={[\n                'Auto-scaling infrastructure',\n                '99.9% uptime SLA',\n                'Global CDN',\n                'Multi-region deployment'\n              ]}\n              gradient=\"bg-gradient-to-br from-blue-600 to-cyan-600\"\n              delay={0.1}\n            />\n            <FeatureCard\n              title=\"Enterprise Security\"\n              description=\"Bank-grade security to protect your data and ensure compliance\"\n              icon={<Shield className=\"w-8 h-8\" />}\n              features={[\n                'End-to-end encryption',\n                'SOC 2 compliance',\n                'Regular security audits',\n                'Advanced threat detection'\n              ]}\n              gradient=\"bg-gradient-to-br from-green-600 to-emerald-600\"\n              delay={0.2}\n            />\n          </div>\n        </section>\n\n        {/* Service Cards */}\n        <section>\n          <h2 className=\"text-3xl font-bold text-white mb-10 text-center\">Service Plans</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <ServiceCard\n              title=\"Starter\"\n              description=\"Perfect for individuals and small teams\"\n              icon={<Zap className=\"w-10 h-10\" />}\n              price={{ amount: '$29', period: 'month' }}\n              features={[\n                'Up to 5 team members',\n                '10GB storage',\n                'Basic analytics',\n                'Email support',\n                'API access'\n              ]}\n              cta={{\n                text: 'Start Free Trial',\n                onClick: () => console.log('Start trial')\n              }}\n              gradient=\"bg-gradient-to-br from-blue-600 to-purple-600\"\n            />\n            <ServiceCard\n              title=\"Professional\"\n              description=\"For growing businesses and teams\"\n              icon={<Briefcase className=\"w-10 h-10\" />}\n              price={{ amount: '$99', period: 'month' }}\n              features={[\n                'Up to 50 team members',\n                '100GB storage',\n                'Advanced analytics',\n                'Priority support',\n                'Custom integrations',\n                'Advanced security'\n              ]}\n              cta={{\n                text: 'Get Started',\n                onClick: () => console.log('Get started')\n              }}\n              popular\n              gradient=\"bg-gradient-to-br from-orange-600 to-pink-600\"\n            />\n            <ServiceCard\n              title=\"Enterprise\"\n              description=\"For large organizations with custom needs\"\n              icon={<Lock className=\"w-10 h-10\" />}\n              price={{ amount: 'Custom', period: '' }}\n              features={[\n                'Unlimited team members',\n                'Unlimited storage',\n                'Custom analytics',\n                'Dedicated support',\n                'On-premise deployment',\n                'Custom features'\n              ]}\n              cta={{\n                text: 'Contact Sales',\n                onClick: () => console.log('Contact sales')\n              }}\n              gradient=\"bg-gradient-to-br from-purple-600 to-indigo-600\"\n            />\n          </div>\n        </section>\n\n        {/* Testimonial Cards */}\n        <section>\n          <h2 className=\"text-3xl font-bold text-white mb-10 text-center\">What Our Customers Say</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <TestimonialCard\n              quote=\"This platform has completely transformed how we manage our projects. The AI features are game-changing!\"\n              author={{\n                name: 'Sarah Johnson',\n                role: 'Product Manager',\n                company: 'TechCorp',\n                avatar: 'https://i.pravatar.cc/150?img=1'\n              }}\n              rating={5}\n              featured\n            />\n            <TestimonialCard\n              quote=\"The best investment we've made for our team. Intuitive, powerful, and incredibly reliable.\"\n              author={{\n                name: 'Michael Chen',\n                role: 'CTO',\n                company: 'StartupXYZ',\n                avatar: 'https://i.pravatar.cc/150?img=2'\n              }}\n              rating={5}\n            />\n            <TestimonialCard\n              quote=\"Outstanding customer support and continuous improvements. Highly recommend to any growing business.\"\n              author={{\n                name: 'Emily Davis',\n                role: 'CEO',\n                company: 'InnovateCo',\n                avatar: 'https://i.pravatar.cc/150?img=3'\n              }}\n              rating={4}\n            />\n          </div>\n        </section>\n\n        {/* Team Cards */}\n        <section>\n          <h2 className=\"text-3xl font-bold text-white mb-10 text-center\">Meet Our Team</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <TeamMemberCard\n              name=\"Alex Rivera\"\n              role=\"Founder & CEO\"\n              bio=\"Visionary leader with 15+ years of experience in building successful tech companies. Passionate about AI and its potential to transform businesses.\"\n              avatar=\"https://i.pravatar.cc/300?img=4\"\n              expertise={['Leadership', 'Strategy', 'AI/ML', 'Product']}\n              social={{\n                linkedin: '#',\n                twitter: '#',\n                email: 'alex@company.com'\n              }}\n              achievements={[\n                { icon: <Award className=\"w-4 h-4\" />, label: 'Forbes 30 Under 30' },\n                { icon: <GraduationCap className=\"w-4 h-4\" />, label: 'Stanford MBA' }\n              ]}\n            />\n            <TeamMemberCard\n              name=\"Jordan Kim\"\n              role=\"Head of Engineering\"\n              bio=\"Full-stack architect with a passion for building scalable systems. Expert in cloud infrastructure and modern development practices.\"\n              avatar=\"https://i.pravatar.cc/300?img=5\"\n              expertise={['React', 'Node.js', 'AWS', 'Kubernetes']}\n              social={{\n                github: '#',\n                linkedin: '#',\n                twitter: '#'\n              }}\n              achievements={[\n                { icon: <Cpu className=\"w-4 h-4\" />, label: 'AWS Certified Architect' },\n                { icon: <Award className=\"w-4 h-4\" />, label: 'Open Source Contributor' }\n              ]}\n            />\n            <TeamMemberCard\n              name=\"Taylor Martinez\"\n              role=\"Head of Design\"\n              bio=\"Award-winning designer focused on creating beautiful, intuitive user experiences. Believes great design is invisible.\"\n              avatar=\"https://i.pravatar.cc/300?img=6\"\n              expertise={['UI/UX', 'Figma', 'Design Systems', 'Branding']}\n              social={{\n                linkedin: '#',\n                twitter: '#'\n              }}\n              achievements={[\n                { icon: <Award className=\"w-4 h-4\" />, label: 'Red Dot Design Award' },\n                { icon: <Briefcase className=\"w-4 h-4\" />, label: 'Ex-Apple Designer' }\n              ]}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n```"}]}
{"messages": [{"role": "system", "content": "You are an expert UI component generator specializing in creating beautiful, modern, accessible card components in the style of 21st.dev. Generate complete, production-ready components with proper TypeScript types, hover effects, responsive design, and modern patterns."}, {"role": "user", "content": "Create interactive card components with 3D effects, parallax scrolling, and advanced animations. Include hover states, tilt effects, and floating elements."}, {"role": "assistant", "content": "```tsx\nimport React, { useState, useRef, useEffect } from 'react'\nimport { motion, useMotionValue, useTransform, useSpring, useScroll, useInView } from 'framer-motion'\nimport { Layers, Sparkles, ArrowRight, Play, Pause, Volume2, VolumeX, Download, Share2, Heart, Eye } from 'lucide-react'\n\n// 3D Tilt Card Component\ninterface Card3DProps {\n  children: React.ReactNode\n  className?: string\n  intensity?: number\n}\n\nexport function Card3D({ children, className = '', intensity = 10 }: Card3DProps) {\n  const ref = useRef<HTMLDivElement>(null)\n  const [isHovered, setIsHovered] = useState(false)\n  \n  const mouseX = useMotionValue(0)\n  const mouseY = useMotionValue(0)\n  \n  const rotateX = useSpring(useTransform(mouseY, [-0.5, 0.5], [intensity, -intensity]))\n  const rotateY = useSpring(useTransform(mouseX, [-0.5, 0.5], [-intensity, intensity]))\n  \n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return\n    \n    const rect = ref.current.getBoundingClientRect()\n    const width = rect.width\n    const height = rect.height\n    const x = e.clientX - rect.left\n    const y = e.clientY - rect.top\n    \n    mouseX.set((x - width / 2) / width)\n    mouseY.set((y - height / 2) / height)\n  }\n  \n  const handleMouseLeave = () => {\n    mouseX.set(0)\n    mouseY.set(0)\n    setIsHovered(false)\n  }\n  \n  return (\n    <motion.div\n      ref={ref}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        rotateX,\n        rotateY,\n        transformStyle: 'preserve-3d',\n        perspective: '1000px'\n      }}\n      animate={{\n        scale: isHovered ? 1.05 : 1\n      }}\n      transition={{ type: 'spring', stiffness: 300, damping: 20 }}\n      className={`relative ${className}`}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\n// Parallax Card with Floating Elements\ninterface ParallaxCardProps {\n  title: string\n  subtitle: string\n  backgroundImage: string\n  floatingElements?: {\n    icon: React.ReactNode\n    position: { x: string; y: string }\n    delay?: number\n  }[]\n}\n\nexport function ParallaxCard({ title, subtitle, backgroundImage, floatingElements = [] }: ParallaxCardProps) {\n  const ref = useRef<HTMLDivElement>(null)\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: ['start end', 'end start']\n  })\n  \n  const y = useTransform(scrollYProgress, [0, 1], [-100, 100])\n  const opacity = useTransform(scrollYProgress, [0, 0.3, 0.7, 1], [0, 1, 1, 0])\n  const scale = useTransform(scrollYProgress, [0, 0.5, 1], [0.8, 1, 0.8])\n  \n  return (\n    <motion.div\n      ref={ref}\n      style={{ opacity, scale }}\n      className=\"relative h-[500px] rounded-3xl overflow-hidden\"\n    >\n      {/* Parallax Background */}\n      <motion.div\n        style={{ y }}\n        className=\"absolute inset-0 -z-10\"\n      >\n        <img\n          src={backgroundImage}\n          alt=\"Background\"\n          className=\"w-full h-[120%] object-cover\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\" />\n      </motion.div>\n      \n      {/* Floating Elements */}\n      {floatingElements.map((element, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute\"\n          style={{\n            left: element.position.x,\n            top: element.position.y\n          }}\n          animate={{\n            y: [0, -20, 0],\n            rotate: [0, 10, -10, 0]\n          }}\n          transition={{\n            duration: 4,\n            repeat: Infinity,\n            delay: element.delay || index * 0.2,\n            ease: 'easeInOut'\n          }}\n        >\n          <div className=\"p-4 bg-white/10 backdrop-blur-md rounded-2xl border border-white/20\">\n            {element.icon}\n          </div>\n        </motion.div>\n      ))}\n      \n      {/* Content */}\n      <div className=\"absolute bottom-0 left-0 right-0 p-8\">\n        <motion.h2\n          initial={{ y: 50, opacity: 0 }}\n          whileInView={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.2 }}\n          className=\"text-4xl font-bold text-white mb-2\"\n        >\n          {title}\n        </motion.h2>\n        <motion.p\n          initial={{ y: 50, opacity: 0 }}\n          whileInView={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.3 }}\n          className=\"text-xl text-white/80\"\n        >\n          {subtitle}\n        </motion.p>\n      </div>\n    </motion.div>\n  )\n}\n\n// Interactive Media Card with Video/Audio\ninterface MediaCardProps {\n  type: 'video' | 'audio'\n  mediaUrl: string\n  thumbnail: string\n  title: string\n  artist?: string\n  duration: string\n}\n\nexport function MediaCard({ type, mediaUrl, thumbnail, title, artist, duration }: MediaCardProps) {\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [isMuted, setIsMuted] = useState(false)\n  const [progress, setProgress] = useState(0)\n  const [isLiked, setIsLiked] = useState(false)\n  const mediaRef = useRef<HTMLVideoElement | HTMLAudioElement>(null)\n  \n  useEffect(() => {\n    const media = mediaRef.current\n    if (!media) return\n    \n    const updateProgress = () => {\n      setProgress((media.currentTime / media.duration) * 100)\n    }\n    \n    media.addEventListener('timeupdate', updateProgress)\n    return () => media.removeEventListener('timeupdate', updateProgress)\n  }, [])\n  \n  const togglePlay = () => {\n    const media = mediaRef.current\n    if (!media) return\n    \n    if (isPlaying) {\n      media.pause()\n    } else {\n      media.play()\n    }\n    setIsPlaying(!isPlaying)\n  }\n  \n  const toggleMute = () => {\n    const media = mediaRef.current\n    if (!media) return\n    \n    media.muted = !isMuted\n    setIsMuted(!isMuted)\n  }\n  \n  return (\n    <Card3D className=\"w-full max-w-md\">\n      <div className=\"relative bg-gray-900 rounded-3xl overflow-hidden shadow-2xl\">\n        {/* Media Element */}\n        {type === 'video' ? (\n          <video\n            ref={mediaRef as React.RefObject<HTMLVideoElement>}\n            src={mediaUrl}\n            poster={thumbnail}\n            className=\"w-full h-64 object-cover\"\n            muted={isMuted}\n          />\n        ) : (\n          <>\n            <audio\n              ref={mediaRef as React.RefObject<HTMLAudioElement>}\n              src={mediaUrl}\n              muted={isMuted}\n            />\n            <div className=\"relative h-64\">\n              <img\n                src={thumbnail}\n                alt={title}\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-black/40 backdrop-blur-sm\" />\n            </div>\n          </>\n        )}\n        \n        {/* Overlay Controls */}\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <motion.button\n            onClick={togglePlay}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            className=\"w-20 h-20 bg-white/20 backdrop-blur-md rounded-full flex items-center justify-center border-2 border-white/40 hover:bg-white/30 transition-colors\"\n          >\n            {isPlaying ? (\n              <Pause className=\"w-8 h-8 text-white ml-0.5\" />\n            ) : (\n              <Play className=\"w-8 h-8 text-white ml-1\" />\n            )}\n          </motion.button>\n        </div>\n        \n        {/* Progress Bar */}\n        <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-white/20\">\n          <motion.div\n            className=\"h-full bg-gradient-to-r from-purple-500 to-pink-500\"\n            style={{ width: `${progress}%` }}\n          />\n        </div>\n        \n        {/* Info Section */}\n        <div className=\"p-6 bg-gray-900\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div>\n              <h3 className=\"text-xl font-bold text-white mb-1\">{title}</h3>\n              {artist && (\n                <p className=\"text-gray-400\">{artist}</p>\n              )}\n            </div>\n            <span className=\"text-sm text-gray-500\">{duration}</span>\n          </div>\n          \n          {/* Action Buttons */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <motion.button\n                onClick={() => setIsLiked(!isLiked)}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"p-2 rounded-lg hover:bg-white/10 transition-colors\"\n              >\n                <Heart className={`w-5 h-5 ${isLiked ? 'fill-red-500 text-red-500' : 'text-gray-400'}`} />\n              </motion.button>\n              <motion.button\n                onClick={toggleMute}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"p-2 rounded-lg hover:bg-white/10 transition-colors\"\n              >\n                {isMuted ? (\n                  <VolumeX className=\"w-5 h-5 text-gray-400\" />\n                ) : (\n                  <Volume2 className=\"w-5 h-5 text-gray-400\" />\n                )}\n              </motion.button>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"p-2 rounded-lg hover:bg-white/10 transition-colors\"\n              >\n                <Download className=\"w-5 h-5 text-gray-400\" />\n              </motion.button>\n              <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                className=\"p-2 rounded-lg hover:bg-white/10 transition-colors\"\n              >\n                <Share2 className=\"w-5 h-5 text-gray-400\" />\n              </motion.button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Card3D>\n  )\n}\n\n// Morphing Card with Shape Animations\ninterface MorphingCardProps {\n  title: string\n  description: string\n  stats: {\n    label: string\n    value: string\n    icon: React.ReactNode\n  }[]\n}\n\nexport function MorphingCard({ title, description, stats }: MorphingCardProps) {\n  const [isHovered, setIsHovered] = useState(false)\n  const [selectedStat, setSelectedStat] = useState(0)\n  \n  return (\n    <motion.div\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n      className=\"relative w-full max-w-md\"\n    >\n      {/* Morphing Background */}\n      <svg\n        className=\"absolute inset-0 w-full h-full\"\n        viewBox=\"0 0 400 400\"\n      >\n        <defs>\n          <linearGradient id=\"morphGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#8B5CF6\" />\n            <stop offset=\"100%\" stopColor=\"#EC4899\" />\n          </linearGradient>\n        </defs>\n        <motion.path\n          d={isHovered\n            ? \"M50,50 Q350,50 350,200 Q350,350 200,350 Q50,350 50,200 Q50,50 50,50\"\n            : \"M100,50 Q300,50 350,150 Q350,250 250,350 Q150,350 50,250 Q50,150 100,50\"}\n          fill=\"url(#morphGradient)\"\n          fillOpacity=\"0.1\"\n          stroke=\"url(#morphGradient)\"\n          strokeWidth=\"2\"\n          animate={{\n            d: isHovered\n              ? \"M50,50 Q350,50 350,200 Q350,350 200,350 Q50,350 50,200 Q50,50 50,50\"\n              : \"M100,50 Q300,50 350,150 Q350,250 250,350 Q150,350 50,250 Q50,150 100,50\"\n          }}\n          transition={{ duration: 0.8, ease: 'easeInOut' }}\n        />\n      </svg>\n      \n      {/* Card Content */}\n      <div className=\"relative bg-white/10 backdrop-blur-xl border border-white/20 rounded-3xl p-8\">\n        <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">{title}</h3>\n        <p className=\"text-gray-600 mb-8\">{description}</p>\n        \n        {/* Animated Stats */}\n        <div className=\"grid grid-cols-3 gap-4\">\n          {stats.map((stat, index) => (\n            <motion.button\n              key={index}\n              onClick={() => setSelectedStat(index)}\n              className=\"relative p-4 rounded-2xl overflow-hidden\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              {/* Selected Background */}\n              <motion.div\n                className=\"absolute inset-0 bg-gradient-to-br from-purple-500 to-pink-500\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: selectedStat === index ? 0.2 : 0 }}\n                transition={{ duration: 0.3 }}\n              />\n              \n              <div className=\"relative text-center\">\n                <motion.div\n                  className=\"w-12 h-12 mx-auto mb-2 text-purple-600\"\n                  animate={{\n                    rotate: selectedStat === index ? 360 : 0,\n                    scale: selectedStat === index ? 1.2 : 1\n                  }}\n                  transition={{ duration: 0.5 }}\n                >\n                  {stat.icon}\n                </motion.div>\n                <motion.p\n                  className=\"text-2xl font-bold text-gray-900\"\n                  animate={{\n                    scale: selectedStat === index ? 1.1 : 1\n                  }}\n                >\n                  {stat.value}\n                </motion.p>\n                <p className=\"text-sm text-gray-600\">{stat.label}</p>\n              </div>\n            </motion.button>\n          ))}\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\n// Layered Card with Depth Effect\ninterface LayeredCardProps {\n  layers: {\n    content: React.ReactNode\n    offset: { x: number; y: number }\n    blur?: number\n  }[]\n}\n\nexport function LayeredCard({ layers }: LayeredCardProps) {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const isInView = useInView(ref, { once: true })\n  \n  return (\n    <motion.div\n      ref={ref}\n      className=\"relative w-full max-w-md h-96 cursor-pointer\"\n      onClick={() => setIsExpanded(!isExpanded)}\n    >\n      {layers.map((layer, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute inset-0 rounded-3xl overflow-hidden shadow-2xl\"\n          initial={{\n            x: layer.offset.x * 2,\n            y: layer.offset.y * 2,\n            opacity: 0,\n            scale: 0.8\n          }}\n          animate={{\n            x: isExpanded ? 0 : layer.offset.x,\n            y: isExpanded ? 0 : layer.offset.y,\n            opacity: isInView ? 1 : 0,\n            scale: isInView ? 1 : 0.8,\n            filter: isExpanded ? 'blur(0px)' : `blur(${layer.blur || 0}px)`\n          }}\n          transition={{\n            duration: 0.8,\n            delay: index * 0.1,\n            ease: 'easeOut'\n          }}\n          style={{\n            zIndex: layers.length - index\n          }}\n        >\n          {layer.content}\n        </motion.div>\n      ))}\n      \n      {/* Floating Indicator */}\n      <motion.div\n        className=\"absolute bottom-4 right-4 flex items-center gap-2 px-4 py-2 bg-white/90 backdrop-blur-sm rounded-full shadow-lg\"\n        animate={{\n          y: [0, -10, 0],\n          opacity: isExpanded ? 0 : 1\n        }}\n        transition={{\n          y: {\n            duration: 2,\n            repeat: Infinity,\n            ease: 'easeInOut'\n          },\n          opacity: {\n            duration: 0.3\n          }\n        }}\n      >\n        <Layers className=\"w-4 h-4\" />\n        <span className=\"text-sm font-medium\">Click to expand</span>\n      </motion.div>\n    </motion.div>\n  )\n}\n\n// Interactive 3D Showcase\nexport function Interactive3DShowcase() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-pink-900 p-8\">\n      {/* Animated Background Particles */}\n      <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n        {[...Array(20)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-white/20 rounded-full\"\n            initial={{\n              x: Math.random() * window.innerWidth,\n              y: Math.random() * window.innerHeight\n            }}\n            animate={{\n              x: Math.random() * window.innerWidth,\n              y: Math.random() * window.innerHeight\n            }}\n            transition={{\n              duration: Math.random() * 20 + 10,\n              repeat: Infinity,\n              ease: 'linear'\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative max-w-7xl mx-auto space-y-32\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"text-center space-y-4\"\n        >\n          <h1 className=\"text-6xl font-bold text-white\">Interactive 3D Cards</h1>\n          <p className=\"text-xl text-white/80\">Advanced animations and effects</p>\n        </motion.div>\n        \n        {/* 3D Tilt Cards */}\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-white text-center\">3D Tilt Effects</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card3D>\n              <div className=\"bg-gradient-to-br from-purple-600 to-pink-600 rounded-3xl p-8 h-64 flex items-center justify-center\">\n                <div className=\"text-center text-white\">\n                  <Sparkles className=\"w-16 h-16 mx-auto mb-4\" />\n                  <h3 className=\"text-2xl font-bold\">Premium Features</h3>\n                  <p className=\"mt-2\">Unlock advanced capabilities</p>\n                </div>\n              </div>\n            </Card3D>\n            <Card3D intensity={15}>\n              <div className=\"bg-gradient-to-br from-blue-600 to-cyan-600 rounded-3xl p-8 h-64 flex items-center justify-center\">\n                <div className=\"text-center text-white\">\n                  <Layers className=\"w-16 h-16 mx-auto mb-4\" />\n                  <h3 className=\"text-2xl font-bold\">Multi-Layer Design</h3>\n                  <p className=\"mt-2\">Complex depth effects</p>\n                </div>\n              </div>\n            </Card3D>\n            <Card3D intensity={20}>\n              <div className=\"bg-gradient-to-br from-green-600 to-emerald-600 rounded-3xl p-8 h-64 flex items-center justify-center\">\n                <div className=\"text-center text-white\">\n                  <Eye className=\"w-16 h-16 mx-auto mb-4\" />\n                  <h3 className=\"text-2xl font-bold\">Visual Impact</h3>\n                  <p className=\"mt-2\">Stunning animations</p>\n                </div>\n              </div>\n            </Card3D>\n          </div>\n        </section>\n        \n        {/* Parallax Cards */}\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-white text-center\">Parallax Scrolling</h2>\n          <div className=\"space-y-16\">\n            <ParallaxCard\n              title=\"Mountain Adventure\"\n              subtitle=\"Explore the peaks\"\n              backgroundImage=\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1200\"\n              floatingElements={[\n                {\n                  icon: <Sparkles className=\"w-8 h-8 text-white\" />,\n                  position: { x: '20%', y: '30%' }\n                },\n                {\n                  icon: <ArrowRight className=\"w-8 h-8 text-white\" />,\n                  position: { x: '70%', y: '50%' },\n                  delay: 0.5\n                }\n              ]}\n            />\n            <ParallaxCard\n              title=\"Ocean Depths\"\n              subtitle=\"Dive into mystery\"\n              backgroundImage=\"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=1200\"\n              floatingElements={[\n                {\n                  icon: <Layers className=\"w-8 h-8 text-white\" />,\n                  position: { x: '80%', y: '20%' }\n                }\n              ]}\n            />\n          </div>\n        </section>\n        \n        {/* Media Cards */}\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-white text-center\">Interactive Media</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 justify-items-center\">\n            <MediaCard\n              type=\"video\"\n              mediaUrl=\"https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n              thumbnail=\"https://images.unsplash.com/photo-1574375927938-d5a98e8ffe85?w=800\"\n              title=\"Big Buck Bunny\"\n              duration=\"10:34\"\n            />\n            <MediaCard\n              type=\"audio\"\n              mediaUrl=\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\"\n              thumbnail=\"https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=800\"\n              title=\"Sound Helix\"\n              artist=\"Audio Library\"\n              duration=\"6:12\"\n            />\n          </div>\n        </section>\n        \n        {/* Morphing Cards */}\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-white text-center\">Morphing Shapes</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 justify-items-center\">\n            <MorphingCard\n              title=\"Performance Metrics\"\n              description=\"Real-time analytics and insights\"\n              stats={[\n                { label: 'Views', value: '12.5K', icon: <Eye className=\"w-6 h-6\" /> },\n                { label: 'Likes', value: '3.2K', icon: <Heart className=\"w-6 h-6\" /> },\n                { label: 'Shares', value: '845', icon: <Share2 className=\"w-6 h-6\" /> }\n              ]}\n            />\n            <MorphingCard\n              title=\"Growth Statistics\"\n              description=\"Track your progress over time\"\n              stats={[\n                { label: 'Revenue', value: '+24%', icon: <TrendingUp className=\"w-6 h-6\" /> },\n                { label: 'Users', value: '8.9K', icon: <Users className=\"w-6 h-6\" /> },\n                { label: 'Downloads', value: '456', icon: <Download className=\"w-6 h-6\" /> }\n              ]}\n            />\n          </div>\n        </section>\n        \n        {/* Layered Cards */}\n        <section className=\"space-y-8\">\n          <h2 className=\"text-3xl font-bold text-white text-center\">Layered Depth</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 justify-items-center\">\n            <LayeredCard\n              layers={[\n                {\n                  content: (\n                    <div className=\"w-full h-full bg-gradient-to-br from-purple-600 to-pink-600 flex items-center justify-center\">\n                      <h3 className=\"text-3xl font-bold text-white\">Layer 1</h3>\n                    </div>\n                  ),\n                  offset: { x: 0, y: 0 }\n                },\n                {\n                  content: (\n                    <div className=\"w-full h-full bg-gradient-to-br from-blue-600 to-cyan-600 flex items-center justify-center\">\n                      <h3 className=\"text-3xl font-bold text-white\">Layer 2</h3>\n                    </div>\n                  ),\n                  offset: { x: 20, y: 20 },\n                  blur: 2\n                },\n                {\n                  content: (\n                    <div className=\"w-full h-full bg-gradient-to-br from-green-600 to-emerald-600 flex items-center justify-center\">\n                      <h3 className=\"text-3xl font-bold text-white\">Layer 3</h3>\n                    </div>\n                  ),\n                  offset: { x: 40, y: 40 },\n                  blur: 4\n                }\n              ]}\n            />\n            <LayeredCard\n              layers={[\n                {\n                  content: (\n                    <img\n                      src=\"https://images.unsplash.com/photo-1620641788421-7a1c342ea42e?w=800\"\n                      alt=\"Abstract\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                  ),\n                  offset: { x: 0, y: 0 }\n                },\n                {\n                  content: (\n                    <div className=\"w-full h-full bg-gradient-to-t from-black/80 to-transparent flex items-end p-8\">\n                      <div className=\"text-white\">\n                        <h3 className=\"text-2xl font-bold mb-2\">Gradient Overlay</h3>\n                        <p>Multiple layers create depth</p>\n                      </div>\n                    </div>\n                  ),\n                  offset: { x: 15, y: 15 }\n                }\n              ]}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n```"}]}